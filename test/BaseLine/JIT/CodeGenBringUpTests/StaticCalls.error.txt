INFO:  jitting method AppDomain::SetupDomain using MSILCJit
Failed to read AppDomain.SetupDomain[Call needs null check]
INFO:  jitting method AppDomain::SetupFusionStore using MSILCJit
Failed to read AppDomain.SetupFusionStore[Call needs null check]
INFO:  jitting method AppDomainSetup::VerifyDir using MSILCJit
Successfully read AppDomainSetup.VerifyDir

define %System.String addrspace(1)* @AppDomainSetup.VerifyDir(%System.AppDomainSetup addrspace(1)* %param0, %System.String addrspace(1)* %param1, i8 %param2) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i8
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i8 %param2, i8* %arg2
  %0 = load %System.String addrspace(1)** %arg1
  %1 = icmp eq %System.String addrspace(1)* %0, null
  br i1 %1, label %16, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32 addrspace(1)* %4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %2
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %arg1
  br label %16

; <label>:8                                       ; preds = %2
  %9 = load i8* %arg2
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

; <label>:12                                      ; preds = %8
  %13 = load %System.AppDomainSetup addrspace(1)** %this
  %14 = load %System.String addrspace(1)** %arg1
  %15 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.AppDomainSetup addrspace(1)*, %System.String addrspace(1)*, i8)*)(%System.AppDomainSetup addrspace(1)* %13, %System.String addrspace(1)* %14, i8 1)
  store %System.String addrspace(1)* %15, %System.String addrspace(1)** %arg1
  br label %16

; <label>:16                                      ; preds = %entry, %7, %8, %12
  %17 = load %System.String addrspace(1)** %arg1
  ret %System.String addrspace(1)* %17
}

INFO:  jitting method AppDomainSetup::SetupDefaults using MSILCJit
Failed to read AppDomainSetup.SetupDefaults[storeElem]
INFO:  jitting method String::LastIndexOfAny using MSILCJit
Failed to read String.LastIndexOfAny[Tail call]
INFO:  jitting method String::Substring using MSILCJit
Failed to read String.Substring[Tail call]
INFO:  jitting method String::InternalSubString using MSILCJit
Failed to read String.InternalSubString[genNullCheck]
INFO:  jitting method Buffer::Memmove using MSILCJit
Failed to read Buffer.Memmove[fgMakeSwitch]
INFO:  jitting method String::Concat using MSILCJit
Successfully read String.Concat

define %System.String addrspace(1)* @String.Concat(%System.String addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i32
  %loc1 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)** %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %13, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)** %arg1
  %6 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %5)
  %7 = zext i8 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %4
  %10 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %10

; <label>:11                                      ; preds = %4
  %12 = load %System.String addrspace(1)** %arg1
  ret %System.String addrspace(1)* %12

; <label>:13                                      ; preds = %entry
  %14 = load %System.String addrspace(1)** %arg1
  %15 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %13
  %19 = load %System.String addrspace(1)** %arg0
  ret %System.String addrspace(1)* %19

; <label>:20                                      ; preds = %13
  %21 = load %System.String addrspace(1)** %arg0
  %22 = getelementptr inbounds %System.String addrspace(1)* %21, i32 0, i32 1
  %23 = load i32 addrspace(1)* %22
  store i32 %23, i32* %loc0
  %24 = load i32* %loc0
  %25 = load %System.String addrspace(1)** %arg1
  %26 = getelementptr inbounds %System.String addrspace(1)* %25, i32 0, i32 1
  %27 = load i32 addrspace(1)* %26
  %28 = add i32 %24, %27
  %29 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 %28)
  store %System.String addrspace(1)* %29, %System.String addrspace(1)** %loc1
  %30 = load %System.String addrspace(1)** %loc1
  %31 = load %System.String addrspace(1)** %arg0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, i32, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %30, i32 0, %System.String addrspace(1)* %31)
  %32 = load %System.String addrspace(1)** %loc1
  %33 = load i32* %loc0
  %34 = load %System.String addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)*, i32, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %32, i32 %33, %System.String addrspace(1)* %34)
  %35 = load %System.String addrspace(1)** %loc1
  ret %System.String addrspace(1)* %35
}

INFO:  jitting method String::IsNullOrEmpty using MSILCJit
Successfully read String.IsNullOrEmpty

define i8 @String.IsNullOrEmpty(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)** %arg0
  %1 = icmp eq %System.String addrspace(1)* %0, null
  br i1 %1, label %9, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** %arg0
  %4 = getelementptr inbounds %System.String addrspace(1)* %3, i32 0, i32 1
  %5 = load i32 addrspace(1)* %4
  %6 = icmp eq i32 %5, 0
  %7 = sext i1 %6 to i32
  %8 = trunc i32 %7 to i8
  ret i8 %8

; <label>:9                                       ; preds = %entry
  ret i8 1
}

INFO:  jitting method String::FillStringChecked using MSILCJit
Failed to read String.FillStringChecked[genNullCheck]
INFO:  jitting method AppDomain::PrepareDataForSetup using MSILCJit
Failed to read AppDomain.PrepareDataForSetup[Call needs null check]
INFO:  jitting method AppDomainSetup::.ctor using MSILCJit
Failed to read AppDomainSetup..ctor[Call needs null check]
INFO:  jitting method List`1::.cctor using MSILCJit
Failed to read List`1..cctor[Keep generic context alive]
INFO:  jitting method String::Compare using MSILCJit
Failed to read String.Compare[fgMakeSwitch]
INFO:  jitting method String::CompareOrdinalIgnoreCaseHelper using MSILCJit
Failed to read String.CompareOrdinalIgnoreCaseHelper[genNullCheck]
INFO:  jitting method List`1::Add using MSILCJit
Failed to read List`1.Add[storeElem]
INFO:  jitting method List`1::EnsureCapacity using MSILCJit
Failed to read List`1.EnsureCapacity[Tail call]
INFO:  jitting method List`1::set_Capacity using MSILCJit
Failed to read List`1.set_Capacity[Keep generic context alive]
INFO:  jitting method AppDomainSetup::SetCompatibilitySwitches using MSILCJit
Failed to read AppDomainSetup.SetCompatibilitySwitches[derefAddress]
INFO:  jitting method Dictionary`2::.ctor using MSILCJit
Failed to read Dictionary`2..ctor[Call HasTypeArg]
INFO:  jitting method EqualityComparer`1::get_Default using MSILCJit
Failed to read EqualityComparer`1.get_Default[Keep generic context alive]
INFO:  jitting method EqualityComparer`1::CreateComparer using MSILCJit
Failed to read EqualityComparer`1.CreateComparer[fgMakeSwitch]
INFO:  jitting method RuntimeType::IsAssignableFrom using MSILCJit
Failed to read RuntimeType.IsAssignableFrom[derefAddress]
INFO:  jitting method RuntimeType::get_UnderlyingSystemType using MSILCJit
Successfully read RuntimeType.get_UnderlyingSystemType

define %System.Type addrspace(1)* @RuntimeType.get_UnderlyingSystemType(%System.RuntimeType addrspace(1)* %param0) {
entry:
  %this = alloca %System.RuntimeType addrspace(1)*
  store %System.RuntimeType addrspace(1)* %param0, %System.RuntimeType addrspace(1)** %this
  %0 = load %System.RuntimeType addrspace(1)** %this
  %1 = bitcast %System.RuntimeType addrspace(1)* %0 to %System.Type addrspace(1)*
  ret %System.Type addrspace(1)* %1
}

INFO:  jitting method GenericEqualityComparer`1::.ctor using MSILCJit
Failed to read GenericEqualityComparer`1..ctor[Tail call]
INFO:  jitting method HashHelpers::.cctor using MSILCJit
Failed to read HashHelpers..cctor[storeStaticField]
INFO:  jitting method String::UseRandomizedHashing using MSILCJit
Failed to read String.UseRandomizedHashing[Tail call]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method Object::.ctor using MSILCJit
Successfully read Object..ctor

define void @Object..ctor(%System.Object addrspace(1)* %param0) {
entry:
  %this = alloca %System.Object addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %this
  ret void
}

INFO:  jitting method List`1::System.Collections.Generic.IEnumerable<T>.GetEnumerator using MSILCJit
Failed to read List`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using MSILCJit
Failed to read Enumerator.MoveNext[loadElem]
INFO:  jitting method Enumerator::get_Current using MSILCJit
Successfully read Enumerator.get_Current

define %System.__Canon addrspace(1)* @Enumerator.get_Current(%"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  %0 = load %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %0, i32 0, i32 1
  %2 = load %System.__Canon addrspace(1)* addrspace(1)* %1, align 8
  ret %System.__Canon addrspace(1)* %2
}

INFO:  jitting method StringComparer::.cctor using MSILCJit
Failed to read StringComparer..cctor[storeStaticField]
INFO:  jitting method CultureInfo::get_InvariantCulture using MSILCJit
Successfully read CultureInfo.get_InvariantCulture

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.get_InvariantCulture() {
entry:
  %0 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 979)
  %1 = getelementptr inbounds i8 addrspace(1)* %0, i64 1720
  %2 = addrspacecast i8 addrspace(1)* %1 to %System.Globalization.CultureInfo addrspace(1)**
  %3 = load volatile %System.Globalization.CultureInfo addrspace(1)** %2
  ret %System.Globalization.CultureInfo addrspace(1)* %3
}

INFO:  jitting method CultureInfo::.cctor using MSILCJit
Failed to read CultureInfo..cctor[storeStaticField]
INFO:  jitting method CultureInfo::Init using MSILCJit
Failed to read CultureInfo.Init[storeStaticField]
INFO:  jitting method CultureInfo::.ctor using MSILCJit
Failed to read CultureInfo..ctor[Call needs null check]
INFO:  jitting method CultureData::GetCultureData using MSILCJit
Failed to read CultureData.GetCultureData[Tail call]
INFO:  jitting method CultureData::get_Invariant using MSILCJit
Failed to read CultureData.get_Invariant[storeElem]
INFO:  jitting method CalendarData::.cctor using MSILCJit
Failed to read CalendarData..cctor[storeElem]
INFO:  jitting method CalendarData::.ctor using MSILCJit
Failed to read CalendarData..ctor[Tail call]
INFO:  jitting method CultureData::get_CultureName using MSILCJit
Successfully read CultureData.get_CultureName

define %System.String addrspace(1)* @CultureData.get_CultureName(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %loc0 = alloca %System.String addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  store %System.String addrspace(1)* %2, %System.String addrspace(1)** %loc0
  %3 = icmp eq %System.String addrspace(1)* %2, null
  br i1 %3, label %20, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)** %loc0
  %6 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %7 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %5, %System.String addrspace(1)* %6)
  %8 = zext i8 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %16, label %10

; <label>:10                                      ; preds = %4
  %11 = load %System.String addrspace(1)** %loc0
  %12 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %11, %System.String addrspace(1)* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %4, %10
  %17 = load %System.Globalization.CultureData addrspace(1)** %this
  %18 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %17, i32 0, i32 3
  %19 = load %System.String addrspace(1)* addrspace(1)* %18, align 8
  ret %System.String addrspace(1)* %19

; <label>:20                                      ; preds = %entry, %10
  %21 = load %System.Globalization.CultureData addrspace(1)** %this
  %22 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %21, i32 0, i32 1
  %23 = load %System.String addrspace(1)* addrspace(1)* %22, align 8
  ret %System.String addrspace(1)* %23
}

INFO:  jitting method String::op_Equality using MSILCJit
Failed to read String.op_Equality[Tail call]
INFO:  jitting method String::Equals using MSILCJit
Failed to read String.Equals[Tail call]
INFO:  jitting method CultureInfo::InitUserDefaultCulture using MSILCJit
Failed to read CultureInfo.InitUserDefaultCulture[Tail call]
INFO:  jitting method CultureInfo::GetDefaultLocaleName using MSILCJit
Failed to read CultureInfo.GetDefaultLocaleName[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method CultureInfo::GetCultureByName using MSILCJit
Successfully read CultureInfo.GetCultureByName

define %System.Globalization.CultureInfo addrspace(1)* @CultureInfo.GetCultureByName(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  %loc0 = alloca %System.Globalization.CultureInfo addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = load i8* %arg1
  %1 = zext i8 %0 to i32
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %entry
  %4 = load %System.String addrspace(1)** %arg0
  %5 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  br label %9

; <label>:6                                       ; preds = %entry
  %7 = load %System.String addrspace(1)** %arg0
  %8 = call %System.Globalization.CultureInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.CultureInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.CultureInfo addrspace(1)*, %System.String addrspace(1)*)*)(%System.Globalization.CultureInfo addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %3, %6
  %10 = phi %System.Globalization.CultureInfo addrspace(1)* [ %5, %3 ], [ %8, %6 ]
  store %System.Globalization.CultureInfo addrspace(1)* %10, %System.Globalization.CultureInfo addrspace(1)** %loc0
  br label %11

; <label>:11                                      ; preds = %9
  %12 = load %System.Globalization.CultureInfo addrspace(1)** %loc0
  ret %System.Globalization.CultureInfo addrspace(1)* %12
}

INFO:  jitting method CultureInfo::.ctor using MSILCJit
Failed to read CultureInfo..ctor[Tail call]
INFO:  jitting method CultureData::AnsiToLower using MSILCJit
Failed to read CultureData.AnsiToLower[derefAddress]
INFO:  jitting method StringBuilder::.ctor using MSILCJit
Failed to read StringBuilder..ctor[storeElem]
INFO:  jitting method StringBuilder::ThreadSafeCopy using MSILCJit
Failed to read StringBuilder.ThreadSafeCopy[loadElemA]
INFO:  jitting method StringBuilder::Append using MSILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::ToString using MSILCJit
Failed to read StringBuilder.ToString[loadElemA]
INFO:  jitting method CultureData::CreateCultureData using MSILCJit
Failed to read CultureData.CreateCultureData[Call needs null check]
INFO:  jitting method Dictionary`2::System.Collections.ICollection.get_SyncRoot using MSILCJit
Failed to read Dictionary`2.System.Collections.ICollection.get_SyncRoot[genNullCheck]
INFO:  jitting method Dictionary`2::Insert using MSILCJit
Failed to read Dictionary`2.Insert[Keep generic context alive]
INFO:  jitting method Dictionary`2::Initialize using MSILCJit
Failed to read Dictionary`2.Initialize[Keep generic context alive]
INFO:  jitting method HashHelpers::GetPrime using MSILCJit
Failed to read HashHelpers.GetPrime[loadElem]
INFO:  jitting method GenericEqualityComparer`1::GetHashCode using MSILCJit
Failed to read GenericEqualityComparer`1.GetHashCode[derefAddress]
INFO:  jitting method String::GetHashCode using MSILCJit
Failed to read String.GetHashCode[Tail call]
INFO:  jitting method CultureInfo::InitUserDefaultUICulture using MSILCJit
Failed to read CultureInfo.InitUserDefaultUICulture[derefAddress]
INFO:  jitting method CultureInfo::GetUserDefaultUILanguage using MSILCJit
Failed to read CultureInfo.GetUserDefaultUILanguage[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method CultureInfo::get_UserDefaultCulture using MSILCJit
Failed to read CultureInfo.get_UserDefaultCulture[storeStaticField]
INFO:  jitting method CultureInfo::get_Name using MSILCJit
Failed to read CultureInfo.get_Name[Call needs null check]
INFO:  jitting method String::EqualsHelper using MSILCJit
Failed to read String.EqualsHelper[genNullCheck]
INFO:  jitting method CultureAwareComparer::.ctor using MSILCJit
Failed to read CultureAwareComparer..ctor[derefAddress]
INFO:  jitting method CultureInfo::get_CompareInfo using MSILCJit
Failed to read CultureInfo.get_CompareInfo[derefAddress]
INFO:  jitting method CompareInfo::.ctor using MSILCJit
Failed to read CompareInfo..ctor[Call needs null check]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[genNullCheck]
INFO:  jitting method OrdinalComparer::.ctor using MSILCJit
Successfully read OrdinalComparer..ctor

define void @OrdinalComparer..ctor(%System.OrdinalComparer addrspace(1)* %param0, i8 %param1) {
entry:
  %this = alloca %System.OrdinalComparer addrspace(1)*
  %arg1 = alloca i8
  store %System.OrdinalComparer addrspace(1)* %param0, %System.OrdinalComparer addrspace(1)** %this
  store i8 %param1, i8* %arg1
  %0 = load %System.OrdinalComparer addrspace(1)** %this
  %1 = bitcast %System.OrdinalComparer addrspace(1)* %0 to %System.StringComparer addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.StringComparer addrspace(1)*)*)(%System.StringComparer addrspace(1)* %1)
  %2 = load %System.OrdinalComparer addrspace(1)** %this
  %3 = load i8* %arg1
  %4 = zext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  %6 = getelementptr inbounds %System.OrdinalComparer addrspace(1)* %2, i32 0, i32 1
  store i8 %5, i8 addrspace(1)* %6
  ret void
}

INFO:  jitting method StringComparer::.ctor using MSILCJit
Failed to read StringComparer..ctor[Tail call]
INFO:  jitting method OrdinalComparer::Equals using MSILCJit
Failed to read OrdinalComparer.Equals[Tail call]
INFO:  jitting method Enumerator::MoveNextRare using MSILCJit
Failed to read Enumerator.MoveNextRare[genNullCheck]
INFO:  jitting method Enumerator::Dispose using MSILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.List`1+Enumerator[System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method AppDomain::Setup using MSILCJit
Failed to read AppDomain.Setup[loadElem]
INFO:  jitting method Thread::GetDomain using MSILCJit
Successfully read Thread.GetDomain

define %System.AppDomain addrspace(1)* @Thread.GetDomain() {
entry:
  %loc0 = alloca %System.AppDomain addrspace(1)*
  %0 = call %System.AppDomain addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomain addrspace(1)* ()*)()
  store %System.AppDomain addrspace(1)* %0, %System.AppDomain addrspace(1)** %loc0
  %1 = load %System.AppDomain addrspace(1)** %loc0
  %2 = icmp ne %System.AppDomain addrspace(1)* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = call %System.AppDomain addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.AppDomain addrspace(1)* ()*)()
  store %System.AppDomain addrspace(1)* %4, %System.AppDomain addrspace(1)** %loc0
  br label %5

; <label>:5                                       ; preds = %entry, %3
  %6 = load %System.AppDomain addrspace(1)** %loc0
  ret %System.AppDomain addrspace(1)* %6
}

INFO:  jitting method AppDomainSetup::GetConfigurationBytes using MSILCJit
Failed to read AppDomainSetup.GetConfigurationBytes[Call needs null check]
INFO:  jitting method KeyCollection::.ctor using MSILCJit
Successfully read KeyCollection..ctor

define void @KeyCollection..ctor(%"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)*
  %arg1 = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param1, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %0 = load %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %3 = icmp ne %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 1)
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)** %this
  %7 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %arg1
  %8 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2+KeyCollection[System.__Canon,System.__Canon]" addrspace(1)* %6, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method KeyCollection::System.Collections.Generic.IEnumerable<TKey>.GetEnumerator using MSILCJit
Failed to read KeyCollection.System.Collections.Generic.IEnumerable<TKey>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using MSILCJit
Failed to read Enumerator.MoveNext[genNullCheck]
INFO:  jitting method Enumerator::get_Current using MSILCJit
Successfully read Enumerator.get_Current

define %System.__Canon addrspace(1)* @Enumerator.get_Current(%"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  %0 = load %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %0, i32 0, i32 1
  %2 = load %System.__Canon addrspace(1)* addrspace(1)* %1, align 8
  ret %System.__Canon addrspace(1)* %2
}

INFO:  jitting method Enumerator::Dispose using MSILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method AppDomainSetup::get_TargetFrameworkName using MSILCJit
Failed to read AppDomainSetup.get_TargetFrameworkName[Call needs null check]
INFO:  jitting method Path::.cctor using MSILCJit
Failed to read Path..cctor[storeStaticField]
INFO:  jitting method String::SplitInternal using MSILCJit
Failed to read String.SplitInternal[Tail call]
INFO:  jitting method String::MakeSeparatorList using MSILCJit
Failed to read String.MakeSeparatorList[genNullCheck]
INFO:  jitting method String::InternalSplitKeepEmptyEntries using MSILCJit
Failed to read String.InternalSplitKeepEmptyEntries[loadElem]
INFO:  jitting method Path::IsRelative using MSILCJit
Successfully read Path.IsRelative

define i8 @Path.IsRelative(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)** %arg0
  %1 = getelementptr inbounds %System.String addrspace(1)* %0, i32 0, i32 1
  %2 = load i32 addrspace(1)* %1
  %3 = icmp slt i32 %2, 3
  br i1 %3, label %50, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)** %arg0
  %6 = getelementptr inbounds %System.String addrspace(1)* %5, i32 0, i32 2, i32 1
  %7 = load i16 addrspace(1)* %6
  %8 = zext i16 %7 to i32
  %9 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %10 = getelementptr inbounds i8 addrspace(1)* %9, i64 2380
  %11 = addrspacecast i8 addrspace(1)* %10 to i16*
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = icmp ne i32 %8, %13
  br i1 %14, label %50, label %15

; <label>:15                                      ; preds = %4
  %16 = load %System.String addrspace(1)** %arg0
  %17 = getelementptr inbounds %System.String addrspace(1)* %16, i32 0, i32 2, i32 2
  %18 = load i16 addrspace(1)* %17
  %19 = zext i16 %18 to i32
  %20 = call i8 addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to i8 addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1421)
  %21 = getelementptr inbounds i8 addrspace(1)* %20, i64 2376
  %22 = addrspacecast i8 addrspace(1)* %21 to i16*
  %23 = load i16* %22
  %24 = zext i16 %23 to i32
  %25 = icmp ne i32 %19, %24
  br i1 %25, label %50, label %26

; <label>:26                                      ; preds = %15
  %27 = load %System.String addrspace(1)** %arg0
  %28 = getelementptr inbounds %System.String addrspace(1)* %27, i32 0, i32 2, i32 0
  %29 = load i16 addrspace(1)* %28
  %30 = zext i16 %29 to i32
  %31 = icmp slt i32 %30, 97
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %26
  %33 = load %System.String addrspace(1)** %arg0
  %34 = getelementptr inbounds %System.String addrspace(1)* %33, i32 0, i32 2, i32 0
  %35 = load i16 addrspace(1)* %34
  %36 = zext i16 %35 to i32
  %37 = icmp sle i32 %36, 122
  br i1 %37, label %67, label %38

; <label>:38                                      ; preds = %26, %32
  %39 = load %System.String addrspace(1)** %arg0
  %40 = getelementptr inbounds %System.String addrspace(1)* %39, i32 0, i32 2, i32 0
  %41 = load i16 addrspace(1)* %40
  %42 = zext i16 %41 to i32
  %43 = icmp slt i32 %42, 65
  br i1 %43, label %50, label %44

; <label>:44                                      ; preds = %38
  %45 = load %System.String addrspace(1)** %arg0
  %46 = getelementptr inbounds %System.String addrspace(1)* %45, i32 0, i32 2, i32 0
  %47 = load i16 addrspace(1)* %46
  %48 = zext i16 %47 to i32
  %49 = icmp sle i32 %48, 90
  br i1 %49, label %67, label %50

; <label>:50                                      ; preds = %entry, %4, %15, %38, %44
  %51 = load %System.String addrspace(1)** %arg0
  %52 = getelementptr inbounds %System.String addrspace(1)* %51, i32 0, i32 1
  %53 = load i32 addrspace(1)* %52
  %54 = icmp slt i32 %53, 2
  br i1 %54, label %68, label %55

; <label>:55                                      ; preds = %50
  %56 = load %System.String addrspace(1)** %arg0
  %57 = getelementptr inbounds %System.String addrspace(1)* %56, i32 0, i32 2, i32 0
  %58 = load i16 addrspace(1)* %57
  %59 = zext i16 %58 to i32
  %60 = icmp ne i32 %59, 92
  br i1 %60, label %68, label %61

; <label>:61                                      ; preds = %55
  %62 = load %System.String addrspace(1)** %arg0
  %63 = getelementptr inbounds %System.String addrspace(1)* %62, i32 0, i32 2, i32 1
  %64 = load i16 addrspace(1)* %63
  %65 = zext i16 %64 to i32
  %66 = icmp ne i32 %65, 92
  br i1 %66, label %68, label %67

; <label>:67                                      ; preds = %32, %44, %61
  ret i8 0

; <label>:68                                      ; preds = %50, %55, %61
  ret i8 1
}

INFO:  jitting method Path::NormalizePath using MSILCJit
Failed to read Path.NormalizePath[entryLabel]
INFO:  jitting method String::TrimHelper using MSILCJit
Failed to read String.TrimHelper[loadElem]
INFO:  jitting method String::CreateTrimmedString using MSILCJit
Failed to read String.CreateTrimmedString[Tail call]
INFO:  jitting method Path::CheckInvalidPathChars using MSILCJit
Successfully read Path.CheckInvalidPathChars

define void @Path.CheckInvalidPathChars(%System.String addrspace(1)* %param0, i8 %param1) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  %arg1 = alloca i8
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  store i8 %param1, i8* %arg1
  %0 = load %System.String addrspace(1)** %arg0
  %1 = icmp ne %System.String addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)** %arg0
  %7 = load i8* %arg1
  %8 = zext i8 %7 to i32
  %9 = trunc i32 %8 to i8
  %10 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, i8)*)(%System.String addrspace(1)* %6, i8 %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

; <label>:13                                      ; preds = %5
  %14 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %14)
  %16 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %16, %System.String addrspace(1)* %15)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %16) #0
  unreachable

; <label>:17                                      ; preds = %5
  ret void
}

INFO:  jitting method Path::HasIllegalCharacters using MSILCJit
Failed to read Path.HasIllegalCharacters[Call needs null check]
INFO:  jitting method PathHelper::Append using MSILCJit
Failed to read PathHelper.Append[storePrimitiveType]
INFO:  jitting method PathHelper::OrdinalStartsWith using MSILCJit
Failed to read PathHelper.OrdinalStartsWith[Tail call]
INFO:  jitting method PathHelper::NullTerminate using MSILCJit
Failed to read PathHelper.NullTerminate[storePrimitiveType]
INFO:  jitting method PathHelper::GetFullPathName using MSILCJit
Failed to read PathHelper.GetFullPathName[entryLabel]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method PathHelper::ToString using MSILCJit
Failed to read PathHelper.ToString[derefAddress]
INFO:  jitting method String::CtorCharPtrStartLength using MSILCJit
Successfully read String.CtorCharPtrStartLength

define %System.String addrspace(1)* @String.CtorCharPtrStartLength(%System.String addrspace(1)* %param0, i16* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %System.String addrspace(1)*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  %arg3 = alloca i32
  %loc0 = alloca i16*
  %loc1 = alloca %System.String addrspace(1)*
  %loc2 = alloca i16*
  %loc3 = alloca %System.String addrspace(1)*
  %loc4 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %this
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load i32* %arg3
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32* %arg2
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %15, label %10

; <label>:10                                      ; preds = %7
  %11 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %12 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  %14 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14, %System.String addrspace(1)* %11, %System.String addrspace(1)* %13)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14) #0
  unreachable

; <label>:15                                      ; preds = %7
  %16 = load i16** %arg1
  %17 = load i32* %arg2
  %18 = sext i32 %17 to i64
  %19 = mul i64 %18, 2
  %20 = bitcast i16* %16 to i8*
  %21 = getelementptr inbounds i8* %20, i64 %19
  %22 = bitcast i8* %21 to i16*
  store i16* %22, i16** %loc0
  %23 = load i16** %loc0
  %24 = load i16** %arg1
  %25 = icmp uge i16* %23, %24
  br i1 %25, label %31, label %26

; <label>:26                                      ; preds = %15
  %27 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %28 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %29 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %28)
  %30 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %30, %System.String addrspace(1)* %27, %System.String addrspace(1)* %29)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %30) #0
  unreachable

; <label>:31                                      ; preds = %15
  %32 = load i32* %arg3
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %36, label %34

; <label>:34                                      ; preds = %31
  %35 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %35

; <label>:36                                      ; preds = %31
  %37 = load i32* %arg3
  %38 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (i32)*)(i32 %37)
  store %System.String addrspace(1)* %38, %System.String addrspace(1)** %loc1
  %39 = load %System.String addrspace(1)** %loc1
  store %System.String addrspace(1)* %39, %System.String addrspace(1)** %loc4
  %40 = load %System.String addrspace(1)** %loc4
  %41 = ptrtoint %System.String addrspace(1)* %40 to i64
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

; <label>:43                                      ; preds = %36
  %44 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %45 = sext i32 %44 to i64
  %46 = add i64 %41, %45
  br label %47

; <label>:47                                      ; preds = %36, %43
  %48 = phi i64 [ %41, %36 ], [ %46, %43 ]
  %49 = inttoptr i64 %48 to i16*
  store i16* %49, i16** %loc2
  %50 = load i16** %loc2
  %51 = load i16** %loc0
  %52 = load i32* %arg3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, i16*, i32)*)(i16* %50, i16* %51, i32 %52)
  br label %53

; <label>:53                                      ; preds = %47
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %loc4
  br label %54

; <label>:54                                      ; preds = %53
  %55 = load %System.String addrspace(1)** %loc1
  store %System.String addrspace(1)* %55, %System.String addrspace(1)** %loc3
  br label %56

; <label>:56                                      ; preds = %54
  %57 = load %System.String addrspace(1)** %loc3
  ret %System.String addrspace(1)* %57
}

INFO:  jitting method RuntimeHelpers::get_OffsetToStringData using MSILCJit
Successfully read RuntimeHelpers.get_OffsetToStringData

define i32 @RuntimeHelpers.get_OffsetToStringData() {
entry:
  ret i32 12
}

INFO:  jitting method String::wstrcpy using MSILCJit
Failed to read String.wstrcpy[Tail call]
INFO:  jitting method String::Equals using MSILCJit
Failed to read String.Equals[fgMakeSwitch]
INFO:  jitting method StringBuilder::Append using MSILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::AppendHelper using MSILCJit
Successfully read StringBuilder.AppendHelper

define void @StringBuilder.AppendHelper(%System.Text.StringBuilder addrspace(1)* %param0, %System.String addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %loc0 = alloca i16*
  %loc1 = alloca %System.String addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  %0 = load %System.String addrspace(1)** %arg1
  store %System.String addrspace(1)* %0, %System.String addrspace(1)** %loc1
  %1 = load %System.String addrspace(1)** %loc1
  %2 = ptrtoint %System.String addrspace(1)* %1 to i64
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  %6 = sext i32 %5 to i64
  %7 = add i64 %2, %6
  br label %8

; <label>:8                                       ; preds = %entry, %4
  %9 = phi i64 [ %2, %entry ], [ %7, %4 ]
  %10 = inttoptr i64 %9 to i16*
  store i16* %10, i16** %loc0
  %11 = load %System.Text.StringBuilder addrspace(1)** %this
  %12 = load i16** %loc0
  %13 = load %System.String addrspace(1)** %arg1
  %14 = getelementptr inbounds %System.String addrspace(1)* %13, i32 0, i32 1
  %15 = load i32 addrspace(1)* %14
  %16 = call %System.Text.StringBuilder addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.StringBuilder addrspace(1)* (%System.Text.StringBuilder addrspace(1)*, i16*, i32)*)(%System.Text.StringBuilder addrspace(1)* %11, i16* %12, i32 %15)
  store %System.String addrspace(1)* null, %System.String addrspace(1)** %loc1
  ret void
}

INFO:  jitting method StringBuilder::Append using MSILCJit
Successfully read StringBuilder.Append

define %System.Text.StringBuilder addrspace(1)* @StringBuilder.Append(%System.Text.StringBuilder addrspace(1)* %param0, i16* %param1, i32 %param2) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i16*
  %arg2 = alloca i32
  %loc0 = alloca i32
  %loc1 = alloca i32
  %loc2 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i16* %param1, i16** %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32* %arg2
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32* %arg2
  %9 = load %System.Text.StringBuilder addrspace(1)** %this
  %10 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %9, i32 0, i32 3
  %11 = load i32 addrspace(1)* %10, align 8
  %12 = add i32 %8, %11
  store i32 %12, i32* %loc0
  %13 = load i32* %loc0
  %14 = load %System.Text.StringBuilder addrspace(1)** %this
  %15 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %14, i32 0, i32 1
  %16 = load %"System.Char[]" addrspace(1)* addrspace(1)* %15, align 8
  %17 = getelementptr inbounds %"System.Char[]" addrspace(1)* %16, i32 0, i32 1
  %18 = load i32 addrspace(1)* %17
  %19 = zext i32 %18 to i64
  %20 = trunc i64 %19 to i32
  %21 = icmp sgt i32 %13, %20
  br i1 %21, label %34, label %22

; <label>:22                                      ; preds = %7
  %23 = load i16** %arg1
  %24 = load %System.Text.StringBuilder addrspace(1)** %this
  %25 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %24, i32 0, i32 1
  %26 = load %"System.Char[]" addrspace(1)* addrspace(1)* %25, align 8
  %27 = load %System.Text.StringBuilder addrspace(1)** %this
  %28 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %27, i32 0, i32 3
  %29 = load i32 addrspace(1)* %28, align 8
  %30 = load i32* %arg2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %23, %"System.Char[]" addrspace(1)* %26, i32 %29, i32 %30)
  %31 = load %System.Text.StringBuilder addrspace(1)** %this
  %32 = load i32* %loc0
  %33 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %31, i32 0, i32 3
  store i32 %32, i32 addrspace(1)* %33
  br label %86

; <label>:34                                      ; preds = %7
  %35 = load %System.Text.StringBuilder addrspace(1)** %this
  %36 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %35, i32 0, i32 1
  %37 = load %"System.Char[]" addrspace(1)* addrspace(1)* %36, align 8
  %38 = getelementptr inbounds %"System.Char[]" addrspace(1)* %37, i32 0, i32 1
  %39 = load i32 addrspace(1)* %38
  %40 = zext i32 %39 to i64
  %41 = trunc i64 %40 to i32
  %42 = load %System.Text.StringBuilder addrspace(1)** %this
  %43 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %42, i32 0, i32 3
  %44 = load i32 addrspace(1)* %43, align 8
  %45 = sub i32 %41, %44
  store i32 %45, i32* %loc1
  %46 = load i32* %loc1
  %47 = icmp sle i32 %46, 0
  br i1 %47, label %66, label %48

; <label>:48                                      ; preds = %34
  %49 = load i16** %arg1
  %50 = load %System.Text.StringBuilder addrspace(1)** %this
  %51 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %50, i32 0, i32 1
  %52 = load %"System.Char[]" addrspace(1)* addrspace(1)* %51, align 8
  %53 = load %System.Text.StringBuilder addrspace(1)** %this
  %54 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %53, i32 0, i32 3
  %55 = load i32 addrspace(1)* %54, align 8
  %56 = load i32* %loc1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %49, %"System.Char[]" addrspace(1)* %52, i32 %55, i32 %56)
  %57 = load %System.Text.StringBuilder addrspace(1)** %this
  %58 = load %System.Text.StringBuilder addrspace(1)** %this
  %59 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %58, i32 0, i32 1
  %60 = load %"System.Char[]" addrspace(1)* addrspace(1)* %59, align 8
  %61 = getelementptr inbounds %"System.Char[]" addrspace(1)* %60, i32 0, i32 1
  %62 = load i32 addrspace(1)* %61
  %63 = zext i32 %62 to i64
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %57, i32 0, i32 3
  store i32 %64, i32 addrspace(1)* %65
  br label %66

; <label>:66                                      ; preds = %34, %48
  %67 = load i32* %arg2
  %68 = load i32* %loc1
  %69 = sub i32 %67, %68
  store i32 %69, i32* %loc2
  %70 = load %System.Text.StringBuilder addrspace(1)** %this
  %71 = load i32* %loc2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32)*)(%System.Text.StringBuilder addrspace(1)* %70, i32 %71)
  %72 = load i16** %arg1
  %73 = load i32* %loc1
  %74 = sext i32 %73 to i64
  %75 = mul i64 %74, 2
  %76 = bitcast i16* %72 to i8*
  %77 = getelementptr inbounds i8* %76, i64 %75
  %78 = load %System.Text.StringBuilder addrspace(1)** %this
  %79 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %78, i32 0, i32 1
  %80 = load %"System.Char[]" addrspace(1)* addrspace(1)* %79, align 8
  %81 = load i32* %loc2
  %82 = bitcast i8* %77 to i16*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i16*, %"System.Char[]" addrspace(1)*, i32, i32)*)(i16* %82, %"System.Char[]" addrspace(1)* %80, i32 0, i32 %81)
  %83 = load %System.Text.StringBuilder addrspace(1)** %this
  %84 = load i32* %loc2
  %85 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %83, i32 0, i32 3
  store i32 %84, i32 addrspace(1)* %85
  br label %86

; <label>:86                                      ; preds = %22, %66
  %87 = load %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %87
}

INFO:  jitting method StringBuilder::ExpandByABlock using MSILCJit
Successfully read StringBuilder.ExpandByABlock

define void @StringBuilder.ExpandByABlock(%System.Text.StringBuilder addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg1
  %1 = load %System.Text.StringBuilder addrspace(1)** %this
  %2 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %1)
  %3 = add i32 %0, %2
  %4 = load %System.Text.StringBuilder addrspace(1)** %this
  %5 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %4, i32 0, i32 5
  %6 = load i32 addrspace(1)* %5, align 8
  %7 = icmp sle i32 %3, %6
  br i1 %7, label %13, label %8

; <label>:8                                       ; preds = %entry
  %9 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %10 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %11 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %10)
  %12 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %12, %System.String addrspace(1)* %9, %System.String addrspace(1)* %11)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %12) #0
  unreachable

; <label>:13                                      ; preds = %entry
  %14 = load i32* %arg1
  %15 = load %System.Text.StringBuilder addrspace(1)** %this
  %16 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %15)
  %17 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %16, i32 8000)
  %18 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %14, i32 %17)
  store i32 %18, i32* %loc0
  %19 = load %System.Text.StringBuilder addrspace(1)** %this
  %20 = load %System.Text.StringBuilder addrspace(1)** %this
  %21 = call %System.Text.StringBuilder addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.StringBuilder addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %21, %System.Text.StringBuilder addrspace(1)* %20)
  %22 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %19, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %22, %System.Text.StringBuilder addrspace(1)* %21)
  %23 = load %System.Text.StringBuilder addrspace(1)** %this
  %24 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 4
  %25 = load i32 addrspace(1)* %24, align 8
  %26 = load %System.Text.StringBuilder addrspace(1)** %this
  %27 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %26, i32 0, i32 3
  %28 = load i32 addrspace(1)* %27, align 8
  %29 = add i32 %25, %28
  %30 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 4
  store i32 %29, i32 addrspace(1)* %30
  %31 = load %System.Text.StringBuilder addrspace(1)** %this
  %32 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %31, i32 0, i32 3
  store i32 0, i32 addrspace(1)* %32
  %33 = load %System.Text.StringBuilder addrspace(1)** %this
  %34 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %33, i32 0, i32 4
  %35 = load i32 addrspace(1)* %34, align 8
  %36 = load i32* %loc0
  %37 = add i32 %35, %36
  %38 = load i32* %loc0
  %39 = icmp sge i32 %37, %38
  br i1 %39, label %44, label %40

; <label>:40                                      ; preds = %13
  %41 = load %System.Text.StringBuilder addrspace(1)** %this
  %42 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %41, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %42, %"System.Char[]" addrspace(1)* null)
  %43 = call %System.OutOfMemoryException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.OutOfMemoryException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OutOfMemoryException addrspace(1)*)*)(%System.OutOfMemoryException addrspace(1)* %43)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.OutOfMemoryException addrspace(1)*)*)(%System.OutOfMemoryException addrspace(1)* %43) #0
  unreachable

; <label>:44                                      ; preds = %13
  %45 = load %System.Text.StringBuilder addrspace(1)** %this
  %46 = load i32* %loc0
  %47 = sext i32 %46 to i64
  %48 = call %"System.Char[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Char[]" addrspace(1)* (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 %47)
  %49 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %45, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %49, %"System.Char[]" addrspace(1)* %48)
  ret void
}

INFO:  jitting method StringBuilder::get_Length using MSILCJit
Successfully read StringBuilder.get_Length

define i32 @StringBuilder.get_Length(%System.Text.StringBuilder addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  %0 = load %System.Text.StringBuilder addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %0, i32 0, i32 4
  %2 = load i32 addrspace(1)* %1, align 8
  %3 = load %System.Text.StringBuilder addrspace(1)** %this
  %4 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %3, i32 0, i32 3
  %5 = load i32 addrspace(1)* %4, align 8
  %6 = add i32 %2, %5
  ret i32 %6
}

INFO:  jitting method Math::Min using MSILCJit
Successfully read Math.Min

define i32 @Math.Min(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = icmp sle i32 %0, %1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i32* %arg1
  ret i32 %4

; <label>:5                                       ; preds = %entry
  %6 = load i32* %arg0
  ret i32 %6
}

INFO:  jitting method Math::Max using MSILCJit
Successfully read Math.Max

define i32 @Math.Max(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = icmp sge i32 %0, %1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i32* %arg1
  ret i32 %4

; <label>:5                                       ; preds = %entry
  %6 = load i32* %arg0
  ret i32 %6
}

INFO:  jitting method StringBuilder::.ctor using MSILCJit
Successfully read StringBuilder..ctor

define void @StringBuilder..ctor(%System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca %System.Text.StringBuilder addrspace(1)*
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store %System.Text.StringBuilder addrspace(1)* %param1, %System.Text.StringBuilder addrspace(1)** %arg1
  %0 = load %System.Text.StringBuilder addrspace(1)** %this
  %1 = bitcast %System.Text.StringBuilder addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %System.Text.StringBuilder addrspace(1)** %this
  %3 = load %System.Text.StringBuilder addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %3, i32 0, i32 3
  %5 = load i32 addrspace(1)* %4, align 8
  %6 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %2, i32 0, i32 3
  store i32 %5, i32 addrspace(1)* %6
  %7 = load %System.Text.StringBuilder addrspace(1)** %this
  %8 = load %System.Text.StringBuilder addrspace(1)** %arg1
  %9 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %8, i32 0, i32 4
  %10 = load i32 addrspace(1)* %9, align 8
  %11 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %7, i32 0, i32 4
  store i32 %10, i32 addrspace(1)* %11
  %12 = load %System.Text.StringBuilder addrspace(1)** %this
  %13 = load %System.Text.StringBuilder addrspace(1)** %arg1
  %14 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %13, i32 0, i32 1
  %15 = load %"System.Char[]" addrspace(1)* addrspace(1)* %14, align 8
  %16 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %12, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Char[]" addrspace(1)* addrspace(1)*, %"System.Char[]" addrspace(1)*)*)(%"System.Char[]" addrspace(1)* addrspace(1)* %16, %"System.Char[]" addrspace(1)* %15)
  %17 = load %System.Text.StringBuilder addrspace(1)** %this
  %18 = load %System.Text.StringBuilder addrspace(1)** %arg1
  %19 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %18, i32 0, i32 2
  %20 = load %System.Text.StringBuilder addrspace(1)* addrspace(1)* %19, align 8
  %21 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %17, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)* addrspace(1)*, %System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* addrspace(1)* %21, %System.Text.StringBuilder addrspace(1)* %20)
  %22 = load %System.Text.StringBuilder addrspace(1)** %this
  %23 = load %System.Text.StringBuilder addrspace(1)** %arg1
  %24 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %23, i32 0, i32 5
  %25 = load i32 addrspace(1)* %24, align 8
  %26 = getelementptr inbounds %System.Text.StringBuilder addrspace(1)* %22, i32 0, i32 5
  store i32 %25, i32 addrspace(1)* %26
  ret void
}

INFO:  jitting method StringBuilder::Append using MSILCJit
Failed to read StringBuilder.Append[storeElem]
INFO:  jitting method StringBuilder::Remove using MSILCJit
Successfully read StringBuilder.Remove

define %System.Text.StringBuilder addrspace(1)* @StringBuilder.Remove(%System.Text.StringBuilder addrspace(1)* %param0, i32 %param1, i32 %param2) {
entry:
  %this = alloca %System.Text.StringBuilder addrspace(1)*
  %arg1 = alloca i32
  %arg2 = alloca i32
  %loc0 = alloca %System.Text.StringBuilder addrspace(1)*
  %loc1 = alloca i32
  store %System.Text.StringBuilder addrspace(1)* %param0, %System.Text.StringBuilder addrspace(1)** %this
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  %0 = load i32* %arg2
  %1 = icmp sge i32 %0, 0
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %5 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %4)
  %6 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6, %System.String addrspace(1)* %3, %System.String addrspace(1)* %5)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %6) #0
  unreachable

; <label>:7                                       ; preds = %entry
  %8 = load i32* %arg1
  %9 = icmp sge i32 %8, 0
  br i1 %9, label %15, label %10

; <label>:10                                      ; preds = %7
  %11 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %12 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %13 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %12)
  %14 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14, %System.String addrspace(1)* %11, %System.String addrspace(1)* %13)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %14) #0
  unreachable

; <label>:15                                      ; preds = %7
  %16 = load i32* %arg2
  %17 = load %System.Text.StringBuilder addrspace(1)** %this
  %18 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %17)
  %19 = load i32* %arg1
  %20 = sub i32 %18, %19
  %21 = icmp sle i32 %16, %20
  br i1 %21, label %27, label %22

; <label>:22                                      ; preds = %15
  %23 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %24 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %25 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %24)
  %26 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %26, %System.String addrspace(1)* %23, %System.String addrspace(1)* %25)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %26) #0
  unreachable

; <label>:27                                      ; preds = %15
  %28 = load %System.Text.StringBuilder addrspace(1)** %this
  %29 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Text.StringBuilder addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %28)
  %30 = load i32* %arg2
  %31 = icmp ne i32 %29, %30
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %27
  %33 = load i32* %arg1
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %38, label %35

; <label>:35                                      ; preds = %32
  %36 = load %System.Text.StringBuilder addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32)*)(%System.Text.StringBuilder addrspace(1)* %36, i32 0)
  %37 = load %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %37

; <label>:38                                      ; preds = %27, %32
  %39 = load i32* %arg2
  %40 = icmp sle i32 %39, 0
  br i1 %40, label %47, label %41

; <label>:41                                      ; preds = %38
  %42 = load %System.Text.StringBuilder addrspace(1)** %this
  %43 = load i32* %arg1
  %44 = load i32* %arg2
  %45 = addrspacecast %System.Text.StringBuilder addrspace(1)** %loc0 to %System.Text.StringBuilder addrspace(1)* addrspace(1)*
  %46 = addrspacecast i32* %loc1 to i32 addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.StringBuilder addrspace(1)*, i32, i32, %System.Text.StringBuilder addrspace(1)* addrspace(1)*, i32 addrspace(1)*)*)(%System.Text.StringBuilder addrspace(1)* %42, i32 %43, i32 %44, %System.Text.StringBuilder addrspace(1)* addrspace(1)* %45, i32 addrspace(1)* %46)
  br label %47

; <label>:47                                      ; preds = %38, %41
  %48 = load %System.Text.StringBuilder addrspace(1)** %this
  ret %System.Text.StringBuilder addrspace(1)* %48
}

INFO:  jitting method StringBuilder::Remove using MSILCJit
Failed to read StringBuilder.Remove[storePrimitiveType]
INFO:  jitting method StringBuilder::ThreadSafeCopy using MSILCJit
Failed to read StringBuilder.ThreadSafeCopy[loadElemA]
INFO:  jitting method Buffer::_Memmove using MSILCJit
Failed to read Buffer._Memmove[Tail call]
INFO:  jitting method AppDomain::SetDataHelper using MSILCJit
Failed to read AppDomain.SetDataHelper[derefAddress]
INFO:  jitting method AppDomain::get_LocalStore using MSILCJit
Successfully read AppDomain.get_LocalStore

define %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* @AppDomain.get_LocalStore(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %0 = load %System.AppDomain addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomain addrspace(1)* %0, i32 0, i32 2
  %2 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp eq %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.AppDomain addrspace(1)** %this
  %6 = getelementptr inbounds %System.AppDomain addrspace(1)* %5, i32 0, i32 2
  %7 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %6, align 8
  ret %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %7

; <label>:8                                       ; preds = %entry
  %9 = load %System.AppDomain addrspace(1)** %this
  %10 = call %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %10)
  %11 = bitcast %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %10 to %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*
  %12 = getelementptr inbounds %System.AppDomain addrspace(1)* %9, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)*)*)(%"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %12, %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %11)
  %13 = load %System.AppDomain addrspace(1)** %this
  %14 = getelementptr inbounds %System.AppDomain addrspace(1)* %13, i32 0, i32 2
  %15 = load %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* addrspace(1)* %14, align 8
  ret %"System.Collections.Generic.Dictionary`2[System.String,System.Object[]]" addrspace(1)* %15
}

INFO:  jitting method Dictionary`2::.ctor using MSILCJit
Failed to read Dictionary`2..ctor[Tail call]
INFO:  jitting method Dictionary`2::TryGetValue using MSILCJit
Failed to read Dictionary`2.TryGetValue[loadElemA]
INFO:  jitting method Dictionary`2::FindEntry using MSILCJit
Failed to read Dictionary`2.FindEntry[Keep generic context alive]
INFO:  jitting method Path::NormalizePath using MSILCJit
Failed to read Path.NormalizePath[Tail call]
INFO:  jitting method StringBuilder::.ctor using MSILCJit
Failed to read StringBuilder..ctor[Tail call]
INFO:  jitting method HashHelpers::ExpandPrime using MSILCJit
Failed to read HashHelpers.ExpandPrime[Tail call]
INFO:  jitting method Dictionary`2::Resize using MSILCJit
Failed to read Dictionary`2.Resize[Keep generic context alive]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[genNullCheck]
INFO:  jitting method AppDomain::CreateAppDomainManager using MSILCJit
Failed to read AppDomain.CreateAppDomainManager[methodNeedsSecurityCheck]
INFO:  jitting method AppDomain::get_FusionStore using MSILCJit
Successfully read AppDomain.get_FusionStore

define %System.AppDomainSetup addrspace(1)* @AppDomain.get_FusionStore(%System.AppDomain addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomain addrspace(1)*
  store %System.AppDomain addrspace(1)* %param0, %System.AppDomain addrspace(1)** %this
  %0 = load %System.AppDomain addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomain addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.AppDomainSetup addrspace(1)* addrspace(1)* %1, align 8
  ret %System.AppDomainSetup addrspace(1)* %2
}

INFO:  jitting method AppDomain::GetData using MSILCJit
Failed to read AppDomain.GetData[Call needs null check]
INFO:  jitting method AppDomainSetup::Locate using MSILCJit
Successfully read AppDomainSetup.Locate

define i32 @AppDomainSetup.Locate(%System.String addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.String addrspace(1)*
  store %System.String addrspace(1)* %param0, %System.String addrspace(1)** %arg0
  %0 = load %System.String addrspace(1)** %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret i32 -1

; <label>:5                                       ; preds = %entry
  %6 = load %System.String addrspace(1)** %arg0
  %7 = getelementptr inbounds %System.String addrspace(1)* %6, i32 0, i32 2, i32 0
  %8 = load i16 addrspace(1)* %7
  %9 = zext i16 %8 to i32
  %10 = icmp ne i32 %9, 65
  br i1 %10, label %18, label %11

; <label>:11                                      ; preds = %5
  %12 = load %System.String addrspace(1)** %arg0
  %13 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %14 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* %12, %System.String addrspace(1)* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %11
  ret i32 0

; <label>:18                                      ; preds = %5, %11
  ret i32 -1
}

INFO:  jitting method AppDomainSetup::get_LoaderOptimizationKey using MSILCJit
Successfully read AppDomainSetup.get_LoaderOptimizationKey

define %System.String addrspace(1)* @AppDomainSetup.get_LoaderOptimizationKey() {
entry:
  %0 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  ret %System.String addrspace(1)* %0
}

INFO:  jitting method String::Equals using MSILCJit
Failed to read String.Equals[Tail call]
INFO:  jitting method Monitor::Enter using MSILCJit
Failed to read Monitor.Enter[Tail call]
INFO:  jitting method GenericEqualityComparer`1::Equals using MSILCJit
Failed to read GenericEqualityComparer`1.Equals[Keep generic context alive]
INFO:  jitting method AppDomain::SetupBindingPaths using MSILCJit
Failed to read AppDomain.SetupBindingPaths[Tail call]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[genNullCheck]
INFO:  jitting method AppDomain::GetAppDomainManagerType using MSILCJit
Failed to read AppDomain.GetAppDomainManagerType[Return refany or value class]
INFO:  jitting method AppDomain::GetNativeHandle using MSILCJit
Failed to read AppDomain.GetNativeHandle[genNullCheck]
INFO:  jitting method AppDomain::InitializeCompatibilityFlags using MSILCJit
Failed to read AppDomain.InitializeCompatibilityFlags[Call needs null check]
INFO:  jitting method Dictionary`2::.ctor using MSILCJit
Failed to read Dictionary`2..ctor[Keep generic context alive]
INFO:  jitting method Dictionary`2::get_Count using MSILCJit
Successfully read Dictionary`2.get_Count

define i32 @"Dictionary`2.get_Count"(%"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)*
  store %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %0 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %1 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %0, i32 0, i32 7
  %2 = load i32 addrspace(1)* %1, align 8
  %3 = load %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)** %this
  %4 = getelementptr inbounds %"System.Collections.Generic.Dictionary`2[System.__Canon,System.__Canon]" addrspace(1)* %3, i32 0, i32 10
  %5 = load i32 addrspace(1)* %4, align 8
  %6 = sub i32 %2, %5
  ret i32 %6
}

INFO:  jitting method Dictionary`2::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator using MSILCJit
Failed to read Dictionary`2.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator[Call HasTypeArg]
INFO:  jitting method Enumerator::MoveNext using MSILCJit
Failed to read Enumerator.MoveNext[genNullCheck]
INFO:  jitting method Enumerator::get_Current using MSILCJit
Failed to read Enumerator.get_Current[loadNonPrimitiveObj]
INFO:  jitting method OrdinalComparer::GetHashCode using MSILCJit
Failed to read OrdinalComparer.GetHashCode[Tail call]
INFO:  jitting method TextInfo::get_Invariant using MSILCJit
Failed to read TextInfo.get_Invariant[storeStaticField]
INFO:  jitting method TextInfo::.ctor using MSILCJit
Failed to read TextInfo..ctor[Call needs null check]
INFO:  jitting method TextInfo::GetCaseInsensitiveHashCode using MSILCJit
Failed to read TextInfo.GetCaseInsensitiveHashCode[Tail call]
INFO:  jitting method Enumerator::Dispose using MSILCJit
Successfully read Enumerator.Dispose

define void @Enumerator.Dispose(%"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %System.RuntimeTypeHandle* %param1) {
entry:
  %this = alloca %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)*
  %"$TypeArg" = alloca %System.RuntimeTypeHandle*
  store %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.Dictionary`2+Enumerator[System.__Canon,System.__Canon]" addrspace(1)** %this
  store %System.RuntimeTypeHandle* %param1, %System.RuntimeTypeHandle** %"$TypeArg"
  ret void
}

INFO:  jitting method CompatibilitySwitches::InitializeSwitches using MSILCJit
Failed to read CompatibilitySwitches.InitializeSwitches[storeStaticField]
INFO:  jitting method CompatibilitySwitches::IsCompatibilitySwitchSet using MSILCJit
Failed to read CompatibilitySwitches.IsCompatibilitySwitchSet[Call needs null check]
INFO:  jitting method AppDomain::IsCompatibilitySwitchSet using MSILCJit
Failed to read AppDomain.IsCompatibilitySwitchSet[Call needs null check]
INFO:  jitting method AppDomain::InitializeDomainSecurity using MSILCJit
Failed to read AppDomain.InitializeDomainSecurity[Call needs null check]
INFO:  jitting method AppDomainSetup::InternalGetApplicationTrust using MSILCJit
Successfully read AppDomainSetup.InternalGetApplicationTrust

define %System.Security.Policy.ApplicationTrust addrspace(1)* @AppDomainSetup.InternalGetApplicationTrust(%System.AppDomainSetup addrspace(1)* %param0) {
entry:
  %this = alloca %System.AppDomainSetup addrspace(1)*
  %loc0 = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  store %System.AppDomainSetup addrspace(1)* %param0, %System.AppDomainSetup addrspace(1)** %this
  %0 = load %System.AppDomainSetup addrspace(1)** %this
  %1 = getelementptr inbounds %System.AppDomainSetup addrspace(1)* %0, i32 0, i32 5
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  ret %System.Security.Policy.ApplicationTrust addrspace(1)* null

; <label>:5                                       ; preds = %entry
  %6 = load %System.AppDomainSetup addrspace(1)** %this
  %7 = getelementptr inbounds %System.AppDomainSetup addrspace(1)* %6, i32 0, i32 5
  %8 = load %System.String addrspace(1)* addrspace(1)* %7, align 8
  %9 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %8)
  %10 = call %System.Security.Policy.ApplicationTrust addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.Policy.ApplicationTrust addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.Policy.ApplicationTrust addrspace(1)* %10, %System.Security.PermissionSet addrspace(1)* %9)
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %10, %System.Security.Policy.ApplicationTrust addrspace(1)** %loc0
  %11 = load %System.Security.Policy.ApplicationTrust addrspace(1)** %loc0
  ret %System.Security.Policy.ApplicationTrust addrspace(1)* %11
}

INFO:  jitting method NamedPermissionSet::GetBuiltInSet using MSILCJit
Failed to read NamedPermissionSet.GetBuiltInSet[Call needs null check]
INFO:  jitting method PermissionSet::.ctor using MSILCJit
Failed to read PermissionSet..ctor[Tail call]
INFO:  jitting method ApplicationTrust::.ctor using MSILCJit
Successfully read ApplicationTrust..ctor

define void @ApplicationTrust..ctor(%System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)* %param1) {
entry:
  %this = alloca %System.Security.Policy.ApplicationTrust addrspace(1)*
  %arg1 = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.Policy.ApplicationTrust addrspace(1)* %param0, %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  store %System.Security.PermissionSet addrspace(1)* %param1, %System.Security.PermissionSet addrspace(1)** %arg1
  %0 = load %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %1 = bitcast %System.Security.Policy.ApplicationTrust addrspace(1)* %0 to %System.Security.Policy.EvidenceBase addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.EvidenceBase addrspace(1)*)*)(%System.Security.Policy.EvidenceBase addrspace(1)* %1)
  %2 = load %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %3 = load %System.Security.PermissionSet addrspace(1)** %arg1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.Policy.ApplicationTrust addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.Policy.ApplicationTrust addrspace(1)* %2, %System.Security.PermissionSet addrspace(1)* %3)
  %4 = load %System.Security.Policy.ApplicationTrust addrspace(1)** %this
  %5 = call %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %5)
  %6 = call %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* (%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.List`1[System.__Canon]" addrspace(1)* %5)
  %7 = bitcast %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %6 to %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)*
  %8 = getelementptr inbounds %System.Security.Policy.ApplicationTrust addrspace(1)* %4, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)*)*)(%"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method EvidenceBase::.ctor using MSILCJit
Failed to read EvidenceBase..ctor[Tail call]
INFO:  jitting method ApplicationTrust::InitDefaultGrantSet using MSILCJit
Failed to read ApplicationTrust.InitDefaultGrantSet[Tail call]
INFO:  jitting method PolicyStatement::.ctor using MSILCJit
Failed to read PolicyStatement..ctor[derefAddress]
INFO:  jitting method PermissionSet::Copy using MSILCJit
Successfully read PermissionSet.Copy

define %System.Security.PermissionSet addrspace(1)* @PermissionSet.Copy(%System.Security.PermissionSet addrspace(1)* %param0) {
entry:
  %this = alloca %System.Security.PermissionSet addrspace(1)*
  store %System.Security.PermissionSet addrspace(1)* %param0, %System.Security.PermissionSet addrspace(1)** %this
  %0 = load %System.Security.PermissionSet addrspace(1)** %this
  %1 = call %System.Security.PermissionSet addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Security.PermissionSet addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Security.PermissionSet addrspace(1)*, %System.Security.PermissionSet addrspace(1)*)*)(%System.Security.PermissionSet addrspace(1)* %1, %System.Security.PermissionSet addrspace(1)* %0)
  ret %System.Security.PermissionSet addrspace(1)* %1
}

INFO:  jitting method PermissionSet::.ctor using MSILCJit
Failed to read PermissionSet..ctor[Tail call]
INFO:  jitting method PolicyStatement::ValidProperties using MSILCJit
Successfully read PolicyStatement.ValidProperties

define i8 @PolicyStatement.ValidProperties(i32 %param0) {
entry:
  %arg0 = alloca i32
  store i32 %param0, i32* %arg0
  %0 = load i32* %arg0
  %1 = and i32 %0, -4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %entry
  ret i8 1

; <label>:4                                       ; preds = %entry
  %5 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %6 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %5)
  %7 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %7, %System.String addrspace(1)* %6)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %7) #0
  unreachable
}

INFO:  jitting method ApplicationTrust::set_DefaultGrantSet using MSILCJit
Failed to read ApplicationTrust.set_DefaultGrantSet[Call needs null check]
INFO:  jitting method PolicyStatement::get_PermissionSet using MSILCJit
Failed to read PolicyStatement.get_PermissionSet[derefAddress]
INFO:  jitting method SecurityManager::GetSpecialFlags using MSILCJit
Failed to read SecurityManager.GetSpecialFlags[Call needs null check]
INFO:  jitting method List`1::.ctor using MSILCJit
Failed to read List`1..ctor[Keep generic context alive]
INFO:  jitting method List`1::AsReadOnly using MSILCJit
Failed to read List`1.AsReadOnly[Keep generic context alive]
INFO:  jitting method ReadOnlyCollection`1::.ctor using MSILCJit
Successfully read ReadOnlyCollection`1..ctor

define void @"ReadOnlyCollection`1..ctor"(%"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %param1) {
entry:
  %this = alloca %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)*
  %arg1 = alloca %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*
  store %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %param0, %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  store %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %param1, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %0 = load %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  %1 = bitcast %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %0 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %1)
  %2 = load %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %3 = icmp ne %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %2, null
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %entry
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 7)
  br label %5

; <label>:5                                       ; preds = %entry, %4
  %6 = load %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)** %this
  %7 = load %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)** %arg1
  %8 = getelementptr inbounds %"System.Collections.ObjectModel.ReadOnlyCollection`1[System.__Canon]" addrspace(1)* %6, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* addrspace(1)*, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)*)*)(%"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* addrspace(1)* %8, %"System.Collections.Generic.IList`1[System.__Canon]" addrspace(1)* %7)
  ret void
}

INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method AppDomain::SetupDomainSecurity using MSILCJit
Failed to read AppDomain.SetupDomainSecurity[Return refany or value class]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method AppDomain::RunInitializer using MSILCJit
Failed to read AppDomain.RunInitializer[Call needs null check]
INFO:  jitting method PermissionSet::.ctor using MSILCJit
Failed to read PermissionSet..ctor[Tail call]
INFO:  jitting method BringUpTest::Main using MSILCJit
Successfully read BringUpTest.Main

define i32 @BringUpTest.Main() {
entry:
  %loc0 = alloca i32
  %0 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 ()*)()
  store i32 %0, i32* %loc0
  %1 = load i32* %loc0
  ret i32 %1
}

INFO:  jitting method BringUpTest::StaticCalls using MSILCJit
Successfully read BringUpTest.StaticCalls

define i32 @BringUpTest.StaticCalls() {
entry:
  %loc0 = alloca i32
  %loc1 = alloca i32
  %loc2 = alloca i32
  %loc3 = alloca i32
  %loc4 = alloca i32
  %loc5 = alloca i32
  %loc6 = alloca i32
  %loc7 = alloca i32
  %loc8 = alloca i8
  %loc9 = alloca float
  %loc10 = alloca float
  %loc11 = alloca float
  %loc12 = alloca float
  %loc13 = alloca float
  %loc14 = alloca float
  %loc15 = alloca float
  %loc16 = alloca double
  %loc17 = alloca double
  %loc18 = alloca double
  %loc19 = alloca double
  %loc20 = alloca double
  %loc21 = alloca double
  %loc22 = alloca double
  store i32 1, i32* %loc0
  store i32 2, i32* %loc1
  store i32 3, i32* %loc2
  store i32 4, i32* %loc3
  store i32 5, i32* %loc4
  store i32 6, i32* %loc5
  store i32 100, i32* %loc6
  %0 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32)*)(i32 1, i32 2, i32 3, i32 4)
  store i32 %0, i32* %loc7
  %1 = load i32* %loc7
  %2 = icmp eq i32 %1, 10
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %entry
  store i32 -1, i32* %loc6
  br label %4

; <label>:4                                       ; preds = %entry, %3
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32, i32)*)(i32 1, i32 2, i32 3, i32 4, i32 5)
  store i32 %5, i32* %loc7
  %6 = load i32* %loc7
  %7 = icmp eq i32 %6, 15
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %4
  store i32 -1, i32* %loc6
  br label %9

; <label>:9                                       ; preds = %4, %8
  %10 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32, i32, i32)*)(i32 1, i32 2, i32 3, i32 4, i32 5, i32 6)
  store i32 %10, i32* %loc7
  %11 = load i32* %loc7
  %12 = icmp eq i32 %11, 21
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %9
  store i32 -1, i32* %loc6
  br label %14

; <label>:14                                      ; preds = %9, %13
  %15 = load i32* %loc0
  %16 = load i32* %loc1
  %17 = load i32* %loc2
  %18 = load i32* %loc3
  %19 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32)*)(i32 %15, i32 %16, i32 %17, i32 %18)
  store i32 %19, i32* %loc7
  %20 = load i32* %loc7
  %21 = icmp eq i32 %20, 10
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %14
  store i32 -1, i32* %loc6
  br label %23

; <label>:23                                      ; preds = %14, %22
  %24 = load i32* %loc0
  %25 = load i32* %loc1
  %26 = load i32* %loc2
  %27 = load i32* %loc3
  %28 = load i32* %loc4
  %29 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32, i32)*)(i32 %24, i32 %25, i32 %26, i32 %27, i32 %28)
  store i32 %29, i32* %loc7
  %30 = load i32* %loc7
  %31 = icmp eq i32 %30, 15
  br i1 %31, label %33, label %32

; <label>:32                                      ; preds = %23
  store i32 -1, i32* %loc6
  br label %33

; <label>:33                                      ; preds = %23, %32
  %34 = load i32* %loc0
  %35 = load i32* %loc1
  %36 = load i32* %loc2
  %37 = load i32* %loc3
  %38 = load i32* %loc4
  %39 = load i32* %loc5
  %40 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32, i32, i32, i32, i32)*)(i32 %34, i32 %35, i32 %36, i32 %37, i32 %38, i32 %39)
  store i32 %40, i32* %loc7
  %41 = load i32* %loc7
  %42 = icmp eq i32 %41, 21
  br i1 %42, label %44, label %43

; <label>:43                                      ; preds = %33
  store i32 -1, i32* %loc6
  br label %44

; <label>:44                                      ; preds = %33, %43
  %45 = load i32* %loc1
  %46 = load i32* %loc5
  %47 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i32, i32)*)(i32 %45, i32 %46)
  store i32 %47, i32* %loc7
  %48 = load i32* %loc7
  %49 = load i32* %loc5
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %44
  store i32 -1, i32* %loc6
  br label %52

; <label>:52                                      ; preds = %44, %51
  %53 = load i32* %loc3
  %54 = load i32* %loc3
  %55 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i32, i32)*)(i32 %53, i32 %54)
  %56 = zext i8 %55 to i32
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %loc8
  %58 = load i8* %loc8
  %59 = zext i8 %58 to i32
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %62, label %61

; <label>:61                                      ; preds = %52
  store i32 -1, i32* %loc6
  br label %62

; <label>:62                                      ; preds = %52, %61
  store float 1.000000e+00, float* %loc9
  store float 2.000000e+00, float* %loc10
  store float 3.000000e+00, float* %loc11
  store float 4.000000e+00, float* %loc12
  store float 5.000000e+00, float* %loc13
  store float 6.000000e+00, float* %loc14
  %63 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float, float, float)*)(float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00)
  store float %63, float* %loc15
  %64 = load float* %loc15
  %65 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (float, float)*)(float %64, float 1.000000e+01)
  %66 = zext i8 %65 to i32
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %69, label %68

; <label>:68                                      ; preds = %62
  store i32 -1, i32* %loc6
  br label %69

; <label>:69                                      ; preds = %62, %68
  %70 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float, float, float, float, float)*)(float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 5.000000e+00, float 6.000000e+00)
  store float %70, float* %loc15
  %71 = load float* %loc15
  %72 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (float, float)*)(float %71, float 2.100000e+01)
  %73 = zext i8 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %76, label %75

; <label>:75                                      ; preds = %69
  store i32 -1, i32* %loc6
  br label %76

; <label>:76                                      ; preds = %69, %75
  %77 = load float* %loc9
  %78 = load float* %loc10
  %79 = load float* %loc11
  %80 = load float* %loc12
  %81 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float, float, float)*)(float %77, float %78, float %79, float %80)
  store float %81, float* %loc15
  %82 = load float* %loc15
  %83 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (float, float)*)(float %82, float 1.000000e+01)
  %84 = zext i8 %83 to i32
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %87, label %86

; <label>:86                                      ; preds = %76
  store i32 -1, i32* %loc6
  br label %87

; <label>:87                                      ; preds = %76, %86
  %88 = load float* %loc9
  %89 = load float* %loc10
  %90 = load float* %loc11
  %91 = load float* %loc12
  %92 = load float* %loc13
  %93 = load float* %loc14
  %94 = call float inttoptr (i64 NORMALIZED_ADDRESS to float (float, float, float, float, float, float)*)(float %88, float %89, float %90, float %91, float %92, float %93)
  store float %94, float* %loc15
  %95 = load float* %loc15
  %96 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (float, float)*)(float %95, float 2.100000e+01)
  %97 = zext i8 %96 to i32
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %100, label %99

; <label>:99                                      ; preds = %87
  store i32 -1, i32* %loc6
  br label %100

; <label>:100                                     ; preds = %87, %99
  store double 1.000000e+00, double* %loc16
  store double 2.000000e+00, double* %loc17
  store double 3.000000e+00, double* %loc18
  store double 4.000000e+00, double* %loc19
  store double 5.000000e+00, double* %loc20
  store double 6.000000e+00, double* %loc21
  %101 = call double inttoptr (i64 NORMALIZED_ADDRESS to double (double, double, double, double)*)(double 1.000000e+00, double 2.000000e+00, double 3.000000e+00, double 4.000000e+00)
  store double %101, double* %loc22
  %102 = load double* %loc22
  %103 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (double, double)*)(double %102, double 1.000000e+01)
  %104 = zext i8 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %107, label %106

; <label>:106                                     ; preds = %100
  store i32 -1, i32* %loc6
  br label %107

; <label>:107                                     ; preds = %100, %106
  %108 = call double inttoptr (i64 NORMALIZED_ADDRESS to double (double, double, double, double, double, double)*)(double 1.000000e+00, double 2.000000e+00, double 3.000000e+00, double 4.000000e+00, double 5.000000e+00, double 6.000000e+00)
  store double %108, double* %loc22
  %109 = load double* %loc22
  %110 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (double, double)*)(double %109, double 2.100000e+01)
  %111 = zext i8 %110 to i32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %114, label %113

; <label>:113                                     ; preds = %107
  store i32 -1, i32* %loc6
  br label %114

; <label>:114                                     ; preds = %107, %113
  %115 = load double* %loc16
  %116 = load double* %loc17
  %117 = load double* %loc18
  %118 = load double* %loc19
  %119 = call double inttoptr (i64 NORMALIZED_ADDRESS to double (double, double, double, double)*)(double %115, double %116, double %117, double %118)
  store double %119, double* %loc22
  %120 = load double* %loc22
  %121 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (double, double)*)(double %120, double 1.000000e+01)
  %122 = zext i8 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %125, label %124

; <label>:124                                     ; preds = %114
  store i32 -1, i32* %loc6
  br label %125

; <label>:125                                     ; preds = %114, %124
  %126 = load double* %loc16
  %127 = load double* %loc17
  %128 = load double* %loc18
  %129 = load double* %loc19
  %130 = load double* %loc20
  %131 = load double* %loc21
  %132 = call double inttoptr (i64 NORMALIZED_ADDRESS to double (double, double, double, double, double, double)*)(double %126, double %127, double %128, double %129, double %130, double %131)
  store double %132, double* %loc22
  %133 = load double* %loc22
  %134 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (double, double)*)(double %133, double 2.100000e+01)
  %135 = zext i8 %134 to i32
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %138, label %137

; <label>:137                                     ; preds = %125
  store i32 -1, i32* %loc6
  br label %138

; <label>:138                                     ; preds = %125, %137
  %139 = load i32* %loc6
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i32)*)(i32 %139)
  %140 = load i32* %loc6
  ret i32 %140
}

INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define i32 @BringUpTest.Sum(i32 %param0, i32 %param1, i32 %param2, i32 %param3) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  %arg2 = alloca i32
  %arg3 = alloca i32
  %loc0 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = add i32 %0, %1
  %3 = load i32* %arg2
  %4 = add i32 %2, %3
  %5 = load i32* %arg3
  %6 = add i32 %4, %5
  store i32 %6, i32* %loc0
  %7 = load i32* %loc0
  ret i32 %7
}

INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define i32 @BringUpTest.Sum(i32 %param0, i32 %param1, i32 %param2, i32 %param3, i32 %param4) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  %arg2 = alloca i32
  %arg3 = alloca i32
  %arg4 = alloca i32
  %loc0 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  store i32 %param4, i32* %arg4
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = add i32 %0, %1
  %3 = load i32* %arg2
  %4 = add i32 %2, %3
  %5 = load i32* %arg3
  %6 = add i32 %4, %5
  %7 = load i32* %arg4
  %8 = add i32 %6, %7
  store i32 %8, i32* %loc0
  %9 = load i32* %loc0
  ret i32 %9
}

INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define i32 @BringUpTest.Sum(i32 %param0, i32 %param1, i32 %param2, i32 %param3, i32 %param4, i32 %param5) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  %arg2 = alloca i32
  %arg3 = alloca i32
  %arg4 = alloca i32
  %arg5 = alloca i32
  %loc0 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  store i32 %param4, i32* %arg4
  store i32 %param5, i32* %arg5
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = add i32 %0, %1
  %3 = load i32* %arg2
  %4 = add i32 %2, %3
  %5 = load i32* %arg3
  %6 = add i32 %4, %5
  %7 = load i32* %arg4
  %8 = add i32 %6, %7
  %9 = load i32* %arg5
  %10 = add i32 %8, %9
  store i32 %10, i32* %loc0
  %11 = load i32* %loc0
  ret i32 %11
}

INFO:  jitting method BringUpTest::Max using MSILCJit
Successfully read BringUpTest.Max

define i32 @BringUpTest.Max(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  %loc0 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = icmp sgt i32 %0, %1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %entry
  %4 = load i32* %arg1
  br label %7

; <label>:5                                       ; preds = %entry
  %6 = load i32* %arg0
  br label %7

; <label>:7                                       ; preds = %3, %5
  %8 = phi i32 [ %4, %3 ], [ %6, %5 ]
  store i32 %8, i32* %loc0
  %9 = load i32* %loc0
  ret i32 %9
}

INFO:  jitting method BringUpTest::IsEqual using MSILCJit
Successfully read BringUpTest.IsEqual

define i8 @BringUpTest.IsEqual(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i32, i32)*)(i32 %0, i32 %1)
  %3 = zext i8 %2 to i32
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %13, label %5

; <label>:5                                       ; preds = %entry
  %6 = load i32* %arg1
  %7 = load i32* %arg0
  %8 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i32, i32)*)(i32 %6, i32 %7)
  %9 = zext i8 %8 to i32
  %10 = icmp eq i32 %9, 0
  %11 = sext i1 %10 to i32
  %12 = trunc i32 %11 to i8
  ret i8 %12

; <label>:13                                      ; preds = %entry
  ret i8 0
}

INFO:  jitting method BringUpTest::IsLessThan using MSILCJit
Successfully read BringUpTest.IsLessThan

define i8 @BringUpTest.IsLessThan(i32 %param0, i32 %param1) {
entry:
  %arg0 = alloca i32
  %arg1 = alloca i32
  store i32 %param0, i32* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i32* %arg0
  %1 = load i32* %arg1
  %2 = icmp slt i32 %0, %1
  %3 = sext i1 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define float @BringUpTest.Sum(float %param0, float %param1, float %param2, float %param3) {
entry:
  %arg0 = alloca float
  %arg1 = alloca float
  %arg2 = alloca float
  %arg3 = alloca float
  %loc0 = alloca float
  store float %param0, float* %arg0
  store float %param1, float* %arg1
  store float %param2, float* %arg2
  store float %param3, float* %arg3
  %0 = load float* %arg0
  %1 = load float* %arg1
  %2 = fadd float %0, %1
  %3 = load float* %arg2
  %4 = fadd float %2, %3
  %5 = load float* %arg3
  %6 = fadd float %4, %5
  store float %6, float* %loc0
  %7 = load float* %loc0
  ret float %7
}

INFO:  jitting method BringUpTest::IsEqual using MSILCJit
Failed to read BringUpTest.IsEqual[abs]
INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define float @BringUpTest.Sum(float %param0, float %param1, float %param2, float %param3, float %param4, float %param5) {
entry:
  %arg0 = alloca float
  %arg1 = alloca float
  %arg2 = alloca float
  %arg3 = alloca float
  %arg4 = alloca float
  %arg5 = alloca float
  %loc0 = alloca float
  store float %param0, float* %arg0
  store float %param1, float* %arg1
  store float %param2, float* %arg2
  store float %param3, float* %arg3
  store float %param4, float* %arg4
  store float %param5, float* %arg5
  %0 = load float* %arg0
  %1 = load float* %arg1
  %2 = fadd float %0, %1
  %3 = load float* %arg2
  %4 = fadd float %2, %3
  %5 = load float* %arg3
  %6 = fadd float %4, %5
  %7 = load float* %arg4
  %8 = fadd float %6, %7
  %9 = load float* %arg5
  %10 = fadd float %8, %9
  store float %10, float* %loc0
  %11 = load float* %loc0
  ret float %11
}

INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define double @BringUpTest.Sum(double %param0, double %param1, double %param2, double %param3) {
entry:
  %arg0 = alloca double
  %arg1 = alloca double
  %arg2 = alloca double
  %arg3 = alloca double
  %loc0 = alloca double
  store double %param0, double* %arg0
  store double %param1, double* %arg1
  store double %param2, double* %arg2
  store double %param3, double* %arg3
  %0 = load double* %arg0
  %1 = load double* %arg1
  %2 = fadd double %0, %1
  %3 = load double* %arg2
  %4 = fadd double %2, %3
  %5 = load double* %arg3
  %6 = fadd double %4, %5
  store double %6, double* %loc0
  %7 = load double* %loc0
  ret double %7
}

INFO:  jitting method BringUpTest::IsEqual using MSILCJit
Failed to read BringUpTest.IsEqual[abs]
INFO:  jitting method BringUpTest::Sum using MSILCJit
Successfully read BringUpTest.Sum

define double @BringUpTest.Sum(double %param0, double %param1, double %param2, double %param3, double %param4, double %param5) {
entry:
  %arg0 = alloca double
  %arg1 = alloca double
  %arg2 = alloca double
  %arg3 = alloca double
  %arg4 = alloca double
  %arg5 = alloca double
  %loc0 = alloca double
  store double %param0, double* %arg0
  store double %param1, double* %arg1
  store double %param2, double* %arg2
  store double %param3, double* %arg3
  store double %param4, double* %arg4
  store double %param5, double* %arg5
  %0 = load double* %arg0
  %1 = load double* %arg1
  %2 = fadd double %0, %1
  %3 = load double* %arg2
  %4 = fadd double %2, %3
  %5 = load double* %arg3
  %6 = fadd double %4, %5
  %7 = load double* %arg4
  %8 = fadd double %6, %7
  %9 = load double* %arg5
  %10 = fadd double %8, %9
  store double %10, double* %loc0
  %11 = load double* %loc0
  ret double %11
}

INFO:  jitting method Console::WriteLine using MSILCJit
Failed to read Console.WriteLine[derefAddress]
INFO:  jitting method Console::get_Out using MSILCJit
Failed to read Console.get_Out[Call HasTypeArg]
INFO:  jitting method Console::.cctor using MSILCJit
Failed to read Console..cctor[storeStaticField]
INFO:  jitting method Console::EnsureInitialized using MSILCJit
Failed to read Console.EnsureInitialized[Call HasTypeArg]
INFO:  jitting method Console::<get_Out>b__2 using MSILCJit
Failed to read Console.<get_Out>b__2[Tail call]
INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method ConsolePal::GetStandardFile using MSILCJit
Successfully read ConsolePal.GetStandardFile

define %System.IO.Stream addrspace(1)* @ConsolePal.GetStandardFile(i64 %param0, i32 %param1) {
entry:
  %arg0 = alloca i64
  %arg1 = alloca i32
  store i64 %param0, i64* %arg0
  store i32 %param1, i32* %arg1
  %0 = load i64* %arg0
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64, i64)*)(i64 %0, i64 0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %18, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i64* %arg0
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1)
  %6 = load i64* inttoptr (i64 NORMALIZED_ADDRESS to i64*)
  %7 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64, i64)*)(i64 %5, i64 %6)
  %8 = zext i8 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %18, label %10

; <label>:10                                      ; preds = %4
  %11 = load i32* %arg1
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %20, label %13

; <label>:13                                      ; preds = %10
  %14 = load i64* %arg0
  %15 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (i64)*)(i64 %14)
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %entry, %4, %13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (i64, i64)*)(i64 NORMALIZED_ADDRESS, i64 1377)
  %19 = load %System.IO.Stream addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.Stream addrspace(1)**)
  ret %System.IO.Stream addrspace(1)* %19

; <label>:20                                      ; preds = %10, %13
  %21 = load i64* %arg0
  %22 = load i32* %arg1
  %23 = call %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.ConsolePal+WindowsConsoleStream" addrspace(1)*, i64, i32)*)(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %23, i64 %21, i32 %22)
  %24 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %23 to %System.IO.Stream addrspace(1)*
  ret %System.IO.Stream addrspace(1)* %24
}

INFO:  jitting method IntPtr::op_Equality using MSILCJit
Successfully read IntPtr.op_Equality

define i8 @IntPtr.op_Equality(i64 %param0, i64 %param1) {
entry:
  %arg0 = alloca i64
  %arg1 = alloca i64
  store i64 %param0, i64* %arg0
  store i64 %param1, i64* %arg1
  %0 = addrspacecast i64* %arg0 to i64 addrspace(1)*
  %1 = bitcast i64 addrspace(1)* %0 to i8 addrspace(1)*
  %2 = getelementptr inbounds i8 addrspace(1)* %1, i64 0
  %3 = bitcast i8 addrspace(1)* %2 to i16* addrspace(1)*
  %4 = load i16* addrspace(1)* %3, align 8
  %5 = addrspacecast i64* %arg1 to i64 addrspace(1)*
  %6 = bitcast i64 addrspace(1)* %5 to i8 addrspace(1)*
  %7 = getelementptr inbounds i8 addrspace(1)* %6, i64 0
  %8 = bitcast i8 addrspace(1)* %7 to i16* addrspace(1)*
  %9 = load i16* addrspace(1)* %8, align 8
  %10 = icmp eq i16* %4, %9
  %11 = sext i1 %10 to i32
  %12 = trunc i32 %11 to i8
  ret i8 %12
}

INFO:  jitting method Interop::.cctor using MSILCJit
Failed to read Interop..cctor[storeStaticField]
INFO:  jitting method IntPtr::.ctor using MSILCJit
Successfully read IntPtr..ctor

define void @IntPtr..ctor(%System.IntPtr addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.IntPtr addrspace(1)*
  %arg1 = alloca i32
  store %System.IntPtr addrspace(1)* %param0, %System.IntPtr addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.IntPtr addrspace(1)** %this
  %1 = load i32* %arg1
  %2 = sext i32 %1 to i64
  %3 = inttoptr i64 %2 to i16*
  %4 = getelementptr inbounds %System.IntPtr addrspace(1)* %0, i32 0, i32 0
  store i16* %3, i16* addrspace(1)* %4
  ret void
}

INFO:  jitting method ConsolePal::ConsoleHandleIsWritable using MSILCJit
Successfully read ConsolePal.ConsoleHandleIsWritable

define i8 @ConsolePal.ConsoleHandleIsWritable(i64 %param0) {
entry:
  %arg0 = alloca i64
  %loc0 = alloca i32
  %loc1 = alloca i8
  store i64 %param0, i64* %arg0
  store i8 65, i8* %loc1
  %0 = load i64* %arg0
  %1 = addrspacecast i8* %loc1 to i8 addrspace(1)*
  %2 = ptrtoint i8 addrspace(1)* %1 to i64
  %3 = addrspacecast i32* %loc0 to i32 addrspace(1)*
  %4 = inttoptr i64 %2 to i8*
  %5 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64, i8*, i32, i32 addrspace(1)*, i64)*)(i64 %0, i8* %4, i32 0, i32 addrspace(1)* %3, i64 0)
  %6 = icmp ugt i32 %5, 0
  %7 = sext i1 %6 to i32
  %8 = trunc i32 %7 to i8
  ret i8 %8
}

INFO:  jitting method DomainBoundILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainBoundILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method WindowsConsoleStream::.ctor using MSILCJit
Successfully read WindowsConsoleStream..ctor

define void @WindowsConsoleStream..ctor(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, i64 %param1, i32 %param2) {
entry:
  %this = alloca %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*
  %arg1 = alloca i64
  %arg2 = alloca i32
  store %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  store i64 %param1, i64* %arg1
  store i32 %param2, i32* %arg2
  %0 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %1 = load i32* %arg2
  %2 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %0 to %System.IO.ConsoleStream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.ConsoleStream addrspace(1)*, i32)*)(%System.IO.ConsoleStream addrspace(1)* %2, i32 %1)
  %3 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %4 = load i64* %arg1
  %5 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %3, i32 0, i32 7
  store i64 %4, i64 addrspace(1)* %5
  %6 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %7 = load i64* %arg1
  %8 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64)*)(i64 %7)
  %9 = icmp eq i32 %8, 3
  %10 = sext i1 %9 to i32
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %6, i32 0, i32 5
  store i8 %11, i8 addrspace(1)* %12
  ret void
}

INFO:  jitting method ConsoleStream::.ctor using MSILCJit
Successfully read ConsoleStream..ctor

define void @ConsoleStream..ctor(%System.IO.ConsoleStream addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  %arg1 = alloca i32
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.IO.ConsoleStream addrspace(1)** %this
  %1 = bitcast %System.IO.ConsoleStream addrspace(1)* %0 to %System.IO.Stream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.Stream addrspace(1)*)*)(%System.IO.Stream addrspace(1)* %1)
  %2 = load %System.IO.ConsoleStream addrspace(1)** %this
  %3 = load i32* %arg1
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 1
  %6 = sext i1 %5 to i32
  %7 = trunc i32 %6 to i8
  %8 = getelementptr inbounds %System.IO.ConsoleStream addrspace(1)* %2, i32 0, i32 3
  store i8 %7, i8 addrspace(1)* %8
  %9 = load %System.IO.ConsoleStream addrspace(1)** %this
  %10 = load i32* %arg1
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 2
  %13 = sext i1 %12 to i32
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %System.IO.ConsoleStream addrspace(1)* %9, i32 0, i32 4
  store i8 %14, i8 addrspace(1)* %15
  ret void
}

INFO:  jitting method Stream::.ctor using MSILCJit
Failed to read Stream..ctor[Tail call]
INFO:  jitting method mincore::GetFileType using MSILCJit
Failed to read mincore.GetFileType[Tail call]
INFO:  jitting method Console::CreateOutputWriter using MSILCJit
Failed to read Console.CreateOutputWriter[derefAddress]
INFO:  jitting method Stream::.cctor using MSILCJit
Failed to read Stream..cctor[storeStaticField]
INFO:  jitting method NullStream::.ctor using MSILCJit
Failed to read NullStream..ctor[Tail call]
INFO:  jitting method mincore::GetConsoleOutputCP using MSILCJit
Failed to read mincore.GetConsoleOutputCP[Tail call]
INFO:  jitting method ConsolePal::GetEncoding using MSILCJit
Successfully read ConsolePal.GetEncoding

define %System.Text.Encoding addrspace(1)* @ConsolePal.GetEncoding(i32 %param0) {
entry:
  %arg0 = alloca i32
  %loc0 = alloca %System.Text.Encoding addrspace(1)*
  store i32 %param0, i32* %arg0
  %0 = load i32* %arg0
  %1 = call %System.Text.Encoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.Encoding addrspace(1)* (i32)*)(i32 %0)
  store %System.Text.Encoding addrspace(1)* %1, %System.Text.Encoding addrspace(1)** %loc0
  %2 = load %System.Text.Encoding addrspace(1)** %loc0
  %3 = call %System.Text.ConsoleEncoding addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.ConsoleEncoding addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.ConsoleEncoding addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.ConsoleEncoding addrspace(1)* %3, %System.Text.Encoding addrspace(1)* %2)
  %4 = bitcast %System.Text.ConsoleEncoding addrspace(1)* %3 to %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %4, %System.Text.Encoding addrspace(1)** %loc0
  br label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.Text.Encoding addrspace(1)** %loc0
  ret %System.Text.Encoding addrspace(1)* %6
}

INFO:  jitting method Encoding::GetEncoding using MSILCJit
Failed to read Encoding.GetEncoding[fgMakeSwitch]
INFO:  jitting method EncodingProvider::GetEncodingFromProvider using MSILCJit
Failed to read EncodingProvider.GetEncodingFromProvider[loadElem]
INFO:  jitting method EncodingProvider::.cctor using MSILCJit
Failed to read EncodingProvider..cctor[storeStaticField]
INFO:  jitting method Encoding::get_InternalSyncObject using MSILCJit
Failed to read Encoding.get_InternalSyncObject[Call HasTypeArg]
INFO:  jitting method Hashtable::.ctor using MSILCJit
Failed to read Hashtable..ctor[Volatile store]
INFO:  jitting method Hashtable::get_Item using MSILCJit
Failed to read Hashtable.get_Item[loadElemA]
INFO:  jitting method Hashtable::InitHash using MSILCJit
Failed to read Hashtable.InitHash[derefAddress]
INFO:  jitting method Hashtable::GetHash using MSILCJit
Failed to read Hashtable.GetHash[derefAddress]
INFO:  jitting method Int32::GetHashCode using MSILCJit
Successfully read Int32.GetHashCode

define i32 @Int32.GetHashCode(%System.Int32 addrspace(1)* %param0) {
entry:
  %this = alloca %System.Int32 addrspace(1)*
  store %System.Int32 addrspace(1)* %param0, %System.Int32 addrspace(1)** %this
  %0 = load %System.Int32 addrspace(1)** %this
  %1 = addrspacecast %System.Int32 addrspace(1)* %0 to i32*
  %2 = load i32* %1, align 8
  ret i32 %2
}

INFO:  jitting method Encoding::get_UTF8 using MSILCJit
Failed to read Encoding.get_UTF8[storeStaticField]
INFO:  jitting method UTF8Encoding::SetDefaultFallbacks using MSILCJit
Successfully read UTF8Encoding.SetDefaultFallbacks

define void @UTF8Encoding.SetDefaultFallbacks(%System.Text.UTF8Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  %0 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.UTF8Encoding addrspace(1)* %0, i32 0, i32 8
  %2 = load i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

; <label>:5                                       ; preds = %entry
  %6 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %7 = call %System.Text.EncoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderFallback addrspace(1)* ()*)()
  %8 = getelementptr inbounds %System.Text.UTF8Encoding addrspace(1)* %6, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %8, %System.Text.EncoderFallback addrspace(1)* %7)
  %9 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %10 = call %System.Text.DecoderFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.DecoderFallback addrspace(1)* ()*)()
  %11 = getelementptr inbounds %System.Text.UTF8Encoding addrspace(1)* %9, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %11, %System.Text.DecoderFallback addrspace(1)* %10)
  ret void

; <label>:12                                      ; preds = %entry
  %13 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %14 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %15 = call %System.Text.EncoderReplacementFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.EncoderReplacementFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderReplacementFallback addrspace(1)*, %System.String addrspace(1)*)*)(%System.Text.EncoderReplacementFallback addrspace(1)* %15, %System.String addrspace(1)* %14)
  %16 = bitcast %System.Text.EncoderReplacementFallback addrspace(1)* %15 to %System.Text.EncoderFallback addrspace(1)*
  %17 = getelementptr inbounds %System.Text.UTF8Encoding addrspace(1)* %13, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %17, %System.Text.EncoderFallback addrspace(1)* %16)
  %18 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %19 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %20 = call %System.Text.DecoderReplacementFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.DecoderReplacementFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderReplacementFallback addrspace(1)*, %System.String addrspace(1)*)*)(%System.Text.DecoderReplacementFallback addrspace(1)* %20, %System.String addrspace(1)* %19)
  %21 = bitcast %System.Text.DecoderReplacementFallback addrspace(1)* %20 to %System.Text.DecoderFallback addrspace(1)*
  %22 = getelementptr inbounds %System.Text.UTF8Encoding addrspace(1)* %18, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %22, %System.Text.DecoderFallback addrspace(1)* %21)
  ret void
}

INFO:  jitting method EncoderReplacementFallback::.ctor using MSILCJit
Failed to read EncoderReplacementFallback..ctor[storeElem]
INFO:  jitting method Char::IsSurrogate using MSILCJit
Failed to read Char.IsSurrogate[Tail call]
INFO:  jitting method DecoderReplacementFallback::.ctor using MSILCJit
Failed to read DecoderReplacementFallback..ctor[storeElem]
INFO:  jitting method Hashtable::Add using MSILCJit
Failed to read Hashtable.Add[Tail call]
INFO:  jitting method Hashtable::Insert using MSILCJit
Failed to read Hashtable.Insert[loadElemA]
INFO:  jitting method ConsoleEncoding::.ctor using MSILCJit
Successfully read ConsoleEncoding..ctor

define void @ConsoleEncoding..ctor(%System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.ConsoleEncoding addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.ConsoleEncoding addrspace(1)* %param0, %System.Text.ConsoleEncoding addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.ConsoleEncoding addrspace(1)** %this
  %1 = bitcast %System.Text.ConsoleEncoding addrspace(1)* %0 to %System.Text.Encoding addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* %1)
  %2 = load %System.Text.ConsoleEncoding addrspace(1)** %this
  %3 = load %System.Text.Encoding addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.ConsoleEncoding addrspace(1)* %2, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %3)
  ret void
}

INFO:  jitting method Encoding::.ctor using MSILCJit
Failed to read Encoding..ctor[Tail call]
INFO:  jitting method Encoding::SetDefaultFallbacks using MSILCJit
Successfully read Encoding.SetDefaultFallbacks

define void @Encoding.SetDefaultFallbacks(%System.Text.Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.Encoding addrspace(1)* %param0, %System.Text.Encoding addrspace(1)** %this
  %0 = load %System.Text.Encoding addrspace(1)** %this
  %1 = load %System.Text.Encoding addrspace(1)** %this
  %2 = call %System.Text.InternalEncoderBestFitFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.InternalEncoderBestFitFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.InternalEncoderBestFitFallback addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.InternalEncoderBestFitFallback addrspace(1)* %2, %System.Text.Encoding addrspace(1)* %1)
  %3 = bitcast %System.Text.InternalEncoderBestFitFallback addrspace(1)* %2 to %System.Text.EncoderFallback addrspace(1)*
  %4 = getelementptr inbounds %System.Text.Encoding addrspace(1)* %0, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)* addrspace(1)*, %System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* addrspace(1)* %4, %System.Text.EncoderFallback addrspace(1)* %3)
  %5 = load %System.Text.Encoding addrspace(1)** %this
  %6 = load %System.Text.Encoding addrspace(1)** %this
  %7 = call %System.Text.InternalDecoderBestFitFallback addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Text.InternalDecoderBestFitFallback addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.InternalDecoderBestFitFallback addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.InternalDecoderBestFitFallback addrspace(1)* %7, %System.Text.Encoding addrspace(1)* %6)
  %8 = bitcast %System.Text.InternalDecoderBestFitFallback addrspace(1)* %7 to %System.Text.DecoderFallback addrspace(1)*
  %9 = getelementptr inbounds %System.Text.Encoding addrspace(1)* %5, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)* addrspace(1)*, %System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* addrspace(1)* %9, %System.Text.DecoderFallback addrspace(1)* %8)
  ret void
}

INFO:  jitting method InternalEncoderBestFitFallback::.ctor using MSILCJit
Successfully read InternalEncoderBestFitFallback..ctor

define void @InternalEncoderBestFitFallback..ctor(%System.Text.InternalEncoderBestFitFallback addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.InternalEncoderBestFitFallback addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.InternalEncoderBestFitFallback addrspace(1)* %param0, %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %1 = bitcast %System.Text.InternalEncoderBestFitFallback addrspace(1)* %0 to %System.Text.EncoderFallback addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.EncoderFallback addrspace(1)*)*)(%System.Text.EncoderFallback addrspace(1)* %1)
  %2 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %3 = load %System.Text.Encoding addrspace(1)** %arg1
  %4 = getelementptr inbounds %System.Text.InternalEncoderBestFitFallback addrspace(1)* %2, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %4, %System.Text.Encoding addrspace(1)* %3)
  %5 = load %System.Text.InternalEncoderBestFitFallback addrspace(1)** %this
  %6 = getelementptr inbounds %System.Text.InternalEncoderBestFitFallback addrspace(1)* %5, i32 0, i32 1
  store i8 1, i8 addrspace(1)* %6
  ret void
}

INFO:  jitting method EncoderFallback::.ctor using MSILCJit
Failed to read EncoderFallback..ctor[Tail call]
INFO:  jitting method InternalDecoderBestFitFallback::.ctor using MSILCJit
Successfully read InternalDecoderBestFitFallback..ctor

define void @InternalDecoderBestFitFallback..ctor(%System.Text.InternalDecoderBestFitFallback addrspace(1)* %param0, %System.Text.Encoding addrspace(1)* %param1) {
entry:
  %this = alloca %System.Text.InternalDecoderBestFitFallback addrspace(1)*
  %arg1 = alloca %System.Text.Encoding addrspace(1)*
  store %System.Text.InternalDecoderBestFitFallback addrspace(1)* %param0, %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  store %System.Text.Encoding addrspace(1)* %param1, %System.Text.Encoding addrspace(1)** %arg1
  %0 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback addrspace(1)* %0, i32 0, i32 5
  store i16 63, i16 addrspace(1)* %1
  %2 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %3 = bitcast %System.Text.InternalDecoderBestFitFallback addrspace(1)* %2 to %System.Text.DecoderFallback addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.DecoderFallback addrspace(1)*)*)(%System.Text.DecoderFallback addrspace(1)* %3)
  %4 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %5 = load %System.Text.Encoding addrspace(1)** %arg1
  %6 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback addrspace(1)* %4, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Text.Encoding addrspace(1)* addrspace(1)*, %System.Text.Encoding addrspace(1)*)*)(%System.Text.Encoding addrspace(1)* addrspace(1)* %6, %System.Text.Encoding addrspace(1)* %5)
  %7 = load %System.Text.InternalDecoderBestFitFallback addrspace(1)** %this
  %8 = getelementptr inbounds %System.Text.InternalDecoderBestFitFallback addrspace(1)* %7, i32 0, i32 1
  store i8 1, i8 addrspace(1)* %8
  ret void
}

INFO:  jitting method DecoderFallback::.ctor using MSILCJit
Failed to read DecoderFallback..ctor[Tail call]
INFO:  jitting method StreamWriter::.ctor using MSILCJit
Failed to read StreamWriter..ctor[derefAddress]
INFO:  jitting method ConsoleStream::get_CanWrite using MSILCJit
Successfully read ConsoleStream.get_CanWrite

define i8 @ConsoleStream.get_CanWrite(%System.IO.ConsoleStream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  %0 = load %System.IO.ConsoleStream addrspace(1)** %this
  %1 = getelementptr inbounds %System.IO.ConsoleStream addrspace(1)* %0, i32 0, i32 4
  %2 = load i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method StreamWriter::Init using MSILCJit
Failed to read StreamWriter.Init[derefAddress]
INFO:  jitting method ConsoleEncoding::GetEncoder using MSILCJit
Failed to read ConsoleEncoding.GetEncoder[derefAddress]
INFO:  jitting method UTF8Encoding::GetEncoder using MSILCJit
Successfully read UTF8Encoding.GetEncoder

define %System.Text.Encoder addrspace(1)* @UTF8Encoding.GetEncoder(%System.Text.UTF8Encoding addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.UTF8Encoding addrspace(1)*
  store %System.Text.UTF8Encoding addrspace(1)* %param0, %System.Text.UTF8Encoding addrspace(1)** %this
  %0 = load %System.Text.UTF8Encoding addrspace(1)** %this
  %1 = call %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)*, %System.Text.UTF8Encoding addrspace(1)*)*)(%"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %1, %System.Text.UTF8Encoding addrspace(1)* %0)
  %2 = bitcast %"System.Text.UTF8Encoding+UTF8Encoder" addrspace(1)* %1 to %System.Text.Encoder addrspace(1)*
  ret %System.Text.Encoder addrspace(1)* %2
}

INFO:  jitting method UTF8Encoder::.ctor using MSILCJit
Failed to read UTF8Encoder..ctor[Tail call]
INFO:  jitting method UTF8Encoder::Reset using MSILCJit
Failed to read UTF8Encoder.Reset[derefAddress]
INFO:  jitting method ConsoleEncoding::GetMaxByteCount using MSILCJit
Failed to read ConsoleEncoding.GetMaxByteCount[derefAddress]
INFO:  jitting method UTF8Encoding::GetMaxByteCount using MSILCJit
Failed to read UTF8Encoding.GetMaxByteCount[derefAddress]
INFO:  jitting method EncoderReplacementFallback::get_MaxCharCount using MSILCJit
Successfully read EncoderReplacementFallback.get_MaxCharCount

define i32 @EncoderReplacementFallback.get_MaxCharCount(%System.Text.EncoderReplacementFallback addrspace(1)* %param0) {
entry:
  %this = alloca %System.Text.EncoderReplacementFallback addrspace(1)*
  store %System.Text.EncoderReplacementFallback addrspace(1)* %param0, %System.Text.EncoderReplacementFallback addrspace(1)** %this
  %0 = load %System.Text.EncoderReplacementFallback addrspace(1)** %this
  %1 = getelementptr inbounds %System.Text.EncoderReplacementFallback addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = getelementptr inbounds %System.String addrspace(1)* %2, i32 0, i32 1
  %4 = load i32 addrspace(1)* %3
  ret i32 %4
}

INFO:  jitting method ConsoleStream::get_CanSeek using MSILCJit
Successfully read ConsoleStream.get_CanSeek

define i8 @ConsoleStream.get_CanSeek(%System.IO.ConsoleStream addrspace(1)* %param0) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  ret i8 0
}

INFO:  jitting method StreamWriter::set_AutoFlush using MSILCJit
Failed to read StreamWriter.set_AutoFlush[Tail call]
INFO:  jitting method StreamWriter::CheckAsyncTaskInProgress using MSILCJit
Failed to read StreamWriter.CheckAsyncTaskInProgress[Call needs null check]
INFO:  jitting method StreamWriter::Flush using MSILCJit
Failed to read StreamWriter.Flush[derefAddress]
INFO:  jitting method ConsoleEncoding::GetPreamble using MSILCJit
Failed to read ConsoleEncoding.GetPreamble[Tail call]
INFO:  jitting method EmptyArray`1::.cctor using MSILCJit
Failed to read EmptyArray`1..cctor[storeStaticField]
INFO:  jitting method EncoderNLS::GetBytes using MSILCJit
Failed to read EncoderNLS.GetBytes[loadElemA]
INFO:  jitting method EncoderNLS::GetBytes using MSILCJit
Failed to read EncoderNLS.GetBytes[derefAddress]
INFO:  jitting method UTF8Encoding::GetBytes using MSILCJit
Failed to read UTF8Encoding.GetBytes[Call needs null check]
INFO:  jitting method WindowsConsoleStream::Flush using MSILCJit
Failed to read WindowsConsoleStream.Flush[Tail call]
INFO:  jitting method SyncTextWriter::GetSynchronizedTextWriter using MSILCJit
Successfully read SyncTextWriter.GetSynchronizedTextWriter

define %System.IO.TextWriter addrspace(1)* @SyncTextWriter.GetSynchronizedTextWriter(%System.IO.TextWriter addrspace(1)* %param0) {
entry:
  %arg0 = alloca %System.IO.TextWriter addrspace(1)*
  store %System.IO.TextWriter addrspace(1)* %param0, %System.IO.TextWriter addrspace(1)** %arg0
  %0 = load %System.IO.TextWriter addrspace(1)** %arg0
  %1 = icmp ne %System.IO.TextWriter addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load %System.IO.TextWriter addrspace(1)** %arg0
  %7 = call %System.IO.SyncTextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.SyncTextWriter addrspace(1)* (i64, %System.IO.TextWriter addrspace(1)*)*)(i64 NORMALIZED_ADDRESS, %System.IO.TextWriter addrspace(1)* %6)
  %8 = icmp ne %System.IO.SyncTextWriter addrspace(1)* %7, null
  br i1 %8, label %13, label %9

; <label>:9                                       ; preds = %5
  %10 = load %System.IO.TextWriter addrspace(1)** %arg0
  %11 = call %System.IO.SyncTextWriter addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.IO.SyncTextWriter addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.SyncTextWriter addrspace(1)*, %System.IO.TextWriter addrspace(1)*)*)(%System.IO.SyncTextWriter addrspace(1)* %11, %System.IO.TextWriter addrspace(1)* %10)
  %12 = bitcast %System.IO.SyncTextWriter addrspace(1)* %11 to %System.IO.TextWriter addrspace(1)*
  ret %System.IO.TextWriter addrspace(1)* %12

; <label>:13                                      ; preds = %5
  %14 = load %System.IO.TextWriter addrspace(1)** %arg0
  ret %System.IO.TextWriter addrspace(1)* %14
}

INFO:  jitting method SyncTextWriter::.ctor using MSILCJit
Failed to read SyncTextWriter..ctor[derefAddress]
INFO:  jitting method TextWriter::get_FormatProvider using MSILCJit
Failed to read TextWriter.get_FormatProvider[Call needs null check]
INFO:  jitting method Object::Finalize using MSILCJit
Successfully read Object.Finalize

define void @Object.Finalize(%System.Object addrspace(1)* %param0) {
entry:
  %this = alloca %System.Object addrspace(1)*
  store %System.Object addrspace(1)* %param0, %System.Object addrspace(1)** %this
  ret void
}

INFO:  jitting method CriticalFinalizerObject::Finalize using MSILCJit
Successfully read CriticalFinalizerObject.Finalize

define void @CriticalFinalizerObject.Finalize(%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %param0) {
entry:
  %this = alloca %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*
  store %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %param0, %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)** %this
  br label %0

; <label>:0                                       ; preds = %entry
  %1 = load %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)** %this
  %2 = bitcast %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %1 to %System.Object addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Object addrspace(1)*)*)(%System.Object addrspace(1)* %2)
  br label %3

; <label>:3                                       ; preds = %0
  ret void
}

INFO:  jitting method Thread::Finalize using MSILCJit
Successfully read Thread.Finalize

define void @Thread.Finalize(%System.Threading.Thread addrspace(1)* %param0) {
entry:
  %this = alloca %System.Threading.Thread addrspace(1)*
  store %System.Threading.Thread addrspace(1)* %param0, %System.Threading.Thread addrspace(1)** %this
  %0 = load %System.Threading.Thread addrspace(1)** %this
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Threading.Thread addrspace(1)*)*)(%System.Threading.Thread addrspace(1)* %0)
  br label %1

; <label>:1                                       ; preds = %entry
  %2 = load %System.Threading.Thread addrspace(1)** %this
  %3 = bitcast %System.Threading.Thread addrspace(1)* %2 to %System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)*)*)(%System.Runtime.ConstrainedExecution.CriticalFinalizerObject addrspace(1)* %3)
  br label %4

; <label>:4                                       ; preds = %1
  ret void
}

INFO:  jitting method Thread::get_CurrentCulture using MSILCJit
Failed to read Thread.get_CurrentCulture[Tail call]
INFO:  jitting method AppDomain::get_Flags using MSILCJit
Failed to read AppDomain.get_Flags[storeStaticField]
INFO:  jitting method DomainNeutralILStubClass::IL_STUB_PInvoke using MSILCJit
Failed to read DomainNeutralILStubClass.IL_STUB_PInvoke[secretParam]
INFO:  jitting method Thread::GetCurrentCultureNoAppX using MSILCJit
Failed to read Thread.GetCurrentCultureNoAppX[Tail call]
INFO:  jitting method SyncTextWriter::WriteLine using MSILCJit
Failed to read SyncTextWriter.WriteLine[derefAddress]
INFO:  jitting method TextWriter::WriteLine using MSILCJit
Failed to read TextWriter.WriteLine[derefAddress]
INFO:  jitting method TextWriter::Write using MSILCJit
Failed to read TextWriter.Write[derefAddress]
INFO:  jitting method NumberFormatInfo::GetInstance using MSILCJit
Failed to read NumberFormatInfo.GetInstance[derefAddress]
INFO:  jitting method CultureInfo::get_NumberFormat using MSILCJit
Successfully read CultureInfo.get_NumberFormat

define %System.Globalization.NumberFormatInfo addrspace(1)* @CultureInfo.get_NumberFormat(%System.Globalization.CultureInfo addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureInfo addrspace(1)*
  %loc0 = alloca %System.Globalization.NumberFormatInfo addrspace(1)*
  store %System.Globalization.CultureInfo addrspace(1)* %param0, %System.Globalization.CultureInfo addrspace(1)** %this
  %0 = load %System.Globalization.CultureInfo addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureInfo addrspace(1)* %0, i32 0, i32 3
  %2 = load %System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.Globalization.NumberFormatInfo addrspace(1)* %2, null
  br i1 %3, label %19, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureInfo addrspace(1)** %this
  %6 = getelementptr inbounds %System.Globalization.CultureInfo addrspace(1)* %5, i32 0, i32 6
  %7 = load %System.Globalization.CultureData addrspace(1)* addrspace(1)* %6, align 8
  %8 = call %System.Globalization.NumberFormatInfo addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Globalization.NumberFormatInfo addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.NumberFormatInfo addrspace(1)*, %System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.NumberFormatInfo addrspace(1)* %8, %System.Globalization.CultureData addrspace(1)* %7)
  store %System.Globalization.NumberFormatInfo addrspace(1)* %8, %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %9 = load %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %10 = load %System.Globalization.CultureInfo addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureInfo addrspace(1)* %10, i32 0, i32 11
  %12 = load i8 addrspace(1)* %11, align 8
  %13 = zext i8 %12 to i32
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %9, i32 0, i32 29
  store i8 %14, i8 addrspace(1)* %15
  %16 = load %System.Globalization.CultureInfo addrspace(1)** %this
  %17 = load %System.Globalization.NumberFormatInfo addrspace(1)** %loc0
  %18 = getelementptr inbounds %System.Globalization.CultureInfo addrspace(1)* %16, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)*)*)(%System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %18, %System.Globalization.NumberFormatInfo addrspace(1)* %17)
  br label %19

; <label>:19                                      ; preds = %entry, %4
  %20 = load %System.Globalization.CultureInfo addrspace(1)** %this
  %21 = getelementptr inbounds %System.Globalization.CultureInfo addrspace(1)* %20, i32 0, i32 3
  %22 = load %System.Globalization.NumberFormatInfo addrspace(1)* addrspace(1)* %21, align 8
  ret %System.Globalization.NumberFormatInfo addrspace(1)* %22
}

INFO:  jitting method NumberFormatInfo::.ctor using MSILCJit
Failed to read NumberFormatInfo..ctor[storeElem]
INFO:  jitting method CultureData::GetNFIValues using MSILCJit
Successfully read CultureData.GetNFIValues

define void @CultureData.GetNFIValues(%System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.NumberFormatInfo addrspace(1)* %param1) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca %System.Globalization.NumberFormatInfo addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store %System.Globalization.NumberFormatInfo addrspace(1)* %param1, %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %65, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %6, i32 0, i32 18
  %8 = load %System.String addrspace(1)* addrspace(1)* %7, align 8
  %9 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %5, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %9, %System.String addrspace(1)* %8)
  %10 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %11 = load %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 19
  %13 = load %System.String addrspace(1)* addrspace(1)* %12, align 8
  %14 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %10, i32 0, i32 5
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %14, %System.String addrspace(1)* %13)
  %15 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %16 = load %System.Globalization.CultureData addrspace(1)** %this
  %17 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %16, i32 0, i32 23
  %18 = load %System.String addrspace(1)* addrspace(1)* %17, align 8
  %19 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %15, i32 0, i32 7
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %19, %System.String addrspace(1)* %18)
  %20 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %21 = load %System.Globalization.CultureData addrspace(1)** %this
  %22 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %21, i32 0, i32 22
  %23 = load %System.String addrspace(1)* addrspace(1)* %22, align 8
  %24 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %20, i32 0, i32 6
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %24, %System.String addrspace(1)* %23)
  %25 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %26 = load %System.Globalization.CultureData addrspace(1)** %this
  %27 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %26, i32 0, i32 51
  %28 = load i32 addrspace(1)* %27, align 8
  %29 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %25, i32 0, i32 21
  store i32 %28, i32 addrspace(1)* %29
  %30 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %31 = load %System.Globalization.CultureData addrspace(1)** %this
  %32 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %31, i32 0, i32 52
  %33 = load i32 addrspace(1)* %32, align 8
  %34 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %30, i32 0, i32 25
  store i32 %33, i32 addrspace(1)* %34
  %35 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %36 = load %System.Globalization.CultureData addrspace(1)** %this
  %37 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %36, i32 0, i32 29
  %38 = load %System.String addrspace(1)* addrspace(1)* %37, align 8
  %39 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %35, i32 0, i32 10
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %39, %System.String addrspace(1)* %38)
  %40 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %41 = load %System.Globalization.CultureData addrspace(1)** %this
  %42 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %41, i32 0, i32 35
  %43 = load %System.String addrspace(1)* addrspace(1)* %42, align 8
  %44 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %40, i32 0, i32 8
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %44, %System.String addrspace(1)* %43)
  %45 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %46 = load %System.Globalization.CultureData addrspace(1)** %this
  %47 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %46, i32 0, i32 34
  %48 = load %System.String addrspace(1)* addrspace(1)* %47, align 8
  %49 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %45, i32 0, i32 9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %49, %System.String addrspace(1)* %48)
  %50 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %51 = load %System.Globalization.CultureData addrspace(1)** %this
  %52 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %51, i32 0, i32 55
  %53 = load i32 addrspace(1)* %52, align 8
  %54 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %50, i32 0, i32 22
  store i32 %53, i32 addrspace(1)* %54
  %55 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %56 = load %System.Globalization.CultureData addrspace(1)** %this
  %57 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %56, i32 0, i32 57
  %58 = load i32 addrspace(1)* %57, align 8
  %59 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %55, i32 0, i32 24
  store i32 %58, i32 addrspace(1)* %59
  %60 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %61 = load %System.Globalization.CultureData addrspace(1)** %this
  %62 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %61, i32 0, i32 56
  %63 = load i32 addrspace(1)* %62, align 8
  %64 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %60, i32 0, i32 23
  store i32 %63, i32 addrspace(1)* %64
  br label %76

; <label>:65                                      ; preds = %entry
  %66 = load %System.Globalization.CultureData addrspace(1)** %this
  %67 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %66, i32 0, i32 2
  %68 = load %System.String addrspace(1)* addrspace(1)* %67, align 8
  %69 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %70 = load %System.Globalization.CultureData addrspace(1)** %this
  %71 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %70)
  %72 = zext i8 %71 to i32
  %73 = trunc i32 %72 to i8
  %74 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.String addrspace(1)*, %System.Globalization.NumberFormatInfo addrspace(1)*, i8)*)(%System.String addrspace(1)* %68, %System.Globalization.NumberFormatInfo addrspace(1)* %69, i8 %73)
  %75 = zext i8 %74 to i32
  br label %76

; <label>:76                                      ; preds = %4, %65
  %77 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %78 = load %System.Globalization.CultureData addrspace(1)** %this
  %79 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %78)
  %80 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %77, i32 0, i32 1
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %80, %"System.Int32[]" addrspace(1)* %79)
  %81 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %82 = load %System.Globalization.CultureData addrspace(1)** %this
  %83 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %82)
  %84 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %81, i32 0, i32 2
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %84, %"System.Int32[]" addrspace(1)* %83)
  %85 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %86 = load %System.Globalization.CultureData addrspace(1)** %this
  %87 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %86)
  %88 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %85, i32 0, i32 27
  store i32 %87, i32 addrspace(1)* %88
  %89 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %90 = load %System.Globalization.CultureData addrspace(1)** %this
  %91 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %90)
  %92 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %89, i32 0, i32 26
  store i32 %91, i32 addrspace(1)* %92
  %93 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %94 = load %System.Globalization.CultureData addrspace(1)** %this
  %95 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %94)
  %96 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %93, i32 0, i32 17
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %96, %System.String addrspace(1)* %95)
  %97 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %98 = load %System.Globalization.CultureData addrspace(1)** %this
  %99 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %98)
  %100 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %97, i32 0, i32 18
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %100, %System.String addrspace(1)* %99)
  %101 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %102 = load %System.Globalization.CultureData addrspace(1)** %this
  %103 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %102)
  %104 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %101, i32 0, i32 14
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %104, %System.String addrspace(1)* %103)
  %105 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %106 = load %System.Globalization.CultureData addrspace(1)** %this
  %107 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %106)
  %108 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %105, i32 0, i32 13
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %108, %System.String addrspace(1)* %107)
  %109 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %110 = load %System.Globalization.CultureData addrspace(1)** %this
  %111 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %110)
  %112 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %109, i32 0, i32 12
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %112, %System.String addrspace(1)* %111)
  %113 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %114 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %115 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %114, i32 0, i32 21
  %116 = load i32 addrspace(1)* %115, align 8
  %117 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %113, i32 0, i32 28
  store i32 %116, i32 addrspace(1)* %117
  %118 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %119 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %120 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %119, i32 0, i32 6
  %121 = load %System.String addrspace(1)* addrspace(1)* %120, align 8
  %122 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %118, i32 0, i32 15
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %122, %System.String addrspace(1)* %121)
  %123 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %124 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %125 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %124, i32 0, i32 1
  %126 = load %"System.Int32[]" addrspace(1)* addrspace(1)* %125, align 8
  %127 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %123, i32 0, i32 3
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %127, %"System.Int32[]" addrspace(1)* %126)
  %128 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %129 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %130 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %129, i32 0, i32 7
  %131 = load %System.String addrspace(1)* addrspace(1)* %130, align 8
  %132 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %128, i32 0, i32 16
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %132, %System.String addrspace(1)* %131)
  %133 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %134 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %133, i32 0, i32 4
  %135 = load %System.String addrspace(1)* addrspace(1)* %134, align 8
  %136 = icmp eq %System.String addrspace(1)* %135, null
  br i1 %136, label %144, label %137

; <label>:137                                     ; preds = %76
  %138 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %139 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %138, i32 0, i32 4
  %140 = load %System.String addrspace(1)* addrspace(1)* %139, align 8
  %141 = getelementptr inbounds %System.String addrspace(1)* %140, i32 0, i32 1
  %142 = load i32 addrspace(1)* %141
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %148, label %144

; <label>:144                                     ; preds = %76, %137
  %145 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %146 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %147 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %145, i32 0, i32 4
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %147, %System.String addrspace(1)* %146)
  br label %148

; <label>:148                                     ; preds = %137, %144
  %149 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %150 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %149, i32 0, i32 9
  %151 = load %System.String addrspace(1)* addrspace(1)* %150, align 8
  %152 = icmp eq %System.String addrspace(1)* %151, null
  br i1 %152, label %160, label %153

; <label>:153                                     ; preds = %148
  %154 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %155 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %154, i32 0, i32 9
  %156 = load %System.String addrspace(1)* addrspace(1)* %155, align 8
  %157 = getelementptr inbounds %System.String addrspace(1)* %156, i32 0, i32 1
  %158 = load i32 addrspace(1)* %157
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %166, label %160

; <label>:160                                     ; preds = %148, %153
  %161 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %162 = load %System.Globalization.NumberFormatInfo addrspace(1)** %arg1
  %163 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %162, i32 0, i32 6
  %164 = load %System.String addrspace(1)* addrspace(1)* %163, align 8
  %165 = getelementptr inbounds %System.Globalization.NumberFormatInfo addrspace(1)* %161, i32 0, i32 9
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %165, %System.String addrspace(1)* %164)
  br label %166

; <label>:166                                     ; preds = %153, %160
  ret void
}

INFO:  jitting method CultureData::get_IsInvariantCulture using MSILCJit
Failed to read CultureData.get_IsInvariantCulture[Tail call]
INFO:  jitting method CultureData::get_UseUserOverride using MSILCJit
Successfully read CultureData.get_UseUserOverride

define i8 @CultureData.get_UseUserOverride(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 62
  %2 = load i8 addrspace(1)* %1, align 8
  %3 = zext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  ret i8 %4
}

INFO:  jitting method CultureData::get_WAGROUPING using MSILCJit
Successfully read CultureData.get_WAGROUPING

define %"System.Int32[]" addrspace(1)* @CultureData.get_WAGROUPING(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 21
  %2 = load %"System.Int32[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %"System.Int32[]" addrspace(1)* %2, null
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 16)
  %8 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %7)
  %9 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 21
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %9, %"System.Int32[]" addrspace(1)* %8)
  br label %10

; <label>:10                                      ; preds = %entry, %4
  %11 = load %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 21
  %13 = load %"System.Int32[]" addrspace(1)* addrspace(1)* %12, align 8
  ret %"System.Int32[]" addrspace(1)* %13
}

INFO:  jitting method CultureData::DoGetLocaleInfo using MSILCJit
Failed to read CultureData.DoGetLocaleInfo[Tail call]
INFO:  jitting method CultureData::DoGetLocaleInfo using MSILCJit
Successfully read CultureData.DoGetLocaleInfo

define %System.String addrspace(1)* @CultureData.DoGetLocaleInfo(%System.Globalization.CultureData addrspace(1)* %param0, %System.String addrspace(1)* %param1, i32 %param2) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca %System.String addrspace(1)*
  %arg2 = alloca i32
  %loc0 = alloca %System.String addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store %System.String addrspace(1)* %param1, %System.String addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i32* %arg2
  %6 = or i32 %5, -2147483648
  store i32 %6, i32* %arg2
  br label %7

; <label>:7                                       ; preds = %entry, %4
  %8 = load %System.String addrspace(1)** %arg1
  %9 = load i32* %arg2
  %10 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %8, i32 %9)
  store %System.String addrspace(1)* %10, %System.String addrspace(1)** %loc0
  %11 = load %System.String addrspace(1)** %loc0
  %12 = icmp ne %System.String addrspace(1)* %11, null
  br i1 %12, label %15, label %13

; <label>:13                                      ; preds = %7
  %14 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  store %System.String addrspace(1)* %14, %System.String addrspace(1)** %loc0
  br label %15

; <label>:15                                      ; preds = %7, %13
  %16 = load %System.String addrspace(1)** %loc0
  ret %System.String addrspace(1)* %16
}

INFO:  jitting method CultureData::ConvertWin32GroupString using MSILCJit
Failed to read CultureData.ConvertWin32GroupString[storeElem]
INFO:  jitting method CultureData::get_WAMONGROUPING using MSILCJit
Successfully read CultureData.get_WAMONGROUPING

define %"System.Int32[]" addrspace(1)* @CultureData.get_WAMONGROUPING(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 33
  %2 = load %"System.Int32[]" addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %"System.Int32[]" addrspace(1)* %2, null
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 24)
  %8 = call %"System.Int32[]" addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %"System.Int32[]" addrspace(1)* (%System.String addrspace(1)*)*)(%System.String addrspace(1)* %7)
  %9 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 33
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%"System.Int32[]" addrspace(1)* addrspace(1)*, %"System.Int32[]" addrspace(1)*)*)(%"System.Int32[]" addrspace(1)* addrspace(1)* %9, %"System.Int32[]" addrspace(1)* %8)
  br label %10

; <label>:10                                      ; preds = %entry, %4
  %11 = load %System.Globalization.CultureData addrspace(1)** %this
  %12 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %11, i32 0, i32 33
  %13 = load %"System.Int32[]" addrspace(1)* addrspace(1)* %12, align 8
  ret %"System.Int32[]" addrspace(1)* %13
}

INFO:  jitting method CultureData::get_INEGATIVEPERCENT using MSILCJit
Successfully read CultureData.get_INEGATIVEPERCENT

define i32 @CultureData.get_INEGATIVEPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 53
  %2 = load i32 addrspace(1)* %1, align 8
  %3 = icmp ne i32 %2, -1
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 116)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 53
  store i32 %7, i32 addrspace(1)* %8
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 53
  %12 = load i32 addrspace(1)* %11, align 8
  ret i32 %12
}

INFO:  jitting method CultureData::DoGetLocaleInfoInt using MSILCJit
Successfully read CultureData.DoGetLocaleInfoInt

define i32 @CultureData.DoGetLocaleInfoInt(%System.Globalization.CultureData addrspace(1)* %param0, i32 %param1) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  %arg1 = alloca i32
  %loc0 = alloca i32
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  store i32 %param1, i32* %arg1
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = call i8 inttoptr (i64 NORMALIZED_ADDRESS to i8 (%System.Globalization.CultureData addrspace(1)*)*)(%System.Globalization.CultureData addrspace(1)* %0)
  %2 = zext i8 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %entry
  %5 = load i32* %arg1
  %6 = or i32 %5, -2147483648
  store i32 %6, i32* %arg1
  br label %7

; <label>:7                                       ; preds = %entry, %4
  %8 = load %System.Globalization.CultureData addrspace(1)** %this
  %9 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %8, i32 0, i32 2
  %10 = load %System.String addrspace(1)* addrspace(1)* %9, align 8
  %11 = load i32* %arg1
  %12 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.String addrspace(1)*, i32)*)(%System.String addrspace(1)* %10, i32 %11)
  store i32 %12, i32* %loc0
  %13 = load i32* %loc0
  ret i32 %13
}

INFO:  jitting method CultureData::get_IPOSITIVEPERCENT using MSILCJit
Successfully read CultureData.get_IPOSITIVEPERCENT

define i32 @CultureData.get_IPOSITIVEPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 54
  %2 = load i32 addrspace(1)* %1, align 8
  %3 = icmp ne i32 %2, -1
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 117)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 54
  store i32 %7, i32 addrspace(1)* %8
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 54
  %12 = load i32 addrspace(1)* %11, align 8
  ret i32 %12
}

INFO:  jitting method CultureData::get_SPERCENT using MSILCJit
Successfully read CultureData.get_SPERCENT

define %System.String addrspace(1)* @CultureData.get_SPERCENT(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 27
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 118)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 27
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 27
  %12 = load %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SPERMILLE using MSILCJit
Successfully read CultureData.get_SPERMILLE

define %System.String addrspace(1)* @CultureData.get_SPERMILLE(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 28
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 119)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 28
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 28
  %12 = load %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SNEGINFINITY using MSILCJit
Successfully read CultureData.get_SNEGINFINITY

define %System.String addrspace(1)* @CultureData.get_SNEGINFINITY(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 26
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 107)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 26
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 26
  %12 = load %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SPOSINFINITY using MSILCJit
Successfully read CultureData.get_SPOSINFINITY

define %System.String addrspace(1)* @CultureData.get_SPOSINFINITY(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 25
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 106)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 25
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 25
  %12 = load %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method CultureData::get_SNAN using MSILCJit
Successfully read CultureData.get_SNAN

define %System.String addrspace(1)* @CultureData.get_SNAN(%System.Globalization.CultureData addrspace(1)* %param0) {
entry:
  %this = alloca %System.Globalization.CultureData addrspace(1)*
  store %System.Globalization.CultureData addrspace(1)* %param0, %System.Globalization.CultureData addrspace(1)** %this
  %0 = load %System.Globalization.CultureData addrspace(1)** %this
  %1 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %0, i32 0, i32 24
  %2 = load %System.String addrspace(1)* addrspace(1)* %1, align 8
  %3 = icmp ne %System.String addrspace(1)* %2, null
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %entry
  %5 = load %System.Globalization.CultureData addrspace(1)** %this
  %6 = load %System.Globalization.CultureData addrspace(1)** %this
  %7 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* (%System.Globalization.CultureData addrspace(1)*, i32)*)(%System.Globalization.CultureData addrspace(1)* %6, i32 105)
  %8 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %5, i32 0, i32 24
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.String addrspace(1)* addrspace(1)*, %System.String addrspace(1)*)*)(%System.String addrspace(1)* addrspace(1)* %8, %System.String addrspace(1)* %7)
  br label %9

; <label>:9                                       ; preds = %entry, %4
  %10 = load %System.Globalization.CultureData addrspace(1)** %this
  %11 = getelementptr inbounds %System.Globalization.CultureData addrspace(1)* %10, i32 0, i32 24
  %12 = load %System.String addrspace(1)* addrspace(1)* %11, align 8
  ret %System.String addrspace(1)* %12
}

INFO:  jitting method StreamWriter::Write using MSILCJit
Failed to read StreamWriter.Write[Tail call]
INFO:  jitting method String::CopyTo using MSILCJit
Failed to read String.CopyTo[genNullCheck]
INFO:  jitting method WindowsConsoleStream::Write using MSILCJit
Successfully read WindowsConsoleStream.Write

define void @WindowsConsoleStream.Write(%"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.Byte[]" addrspace(1)* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %"System.ConsolePal+WindowsConsoleStream" addrspace(1)*
  %arg1 = alloca %"System.Byte[]" addrspace(1)*
  %arg2 = alloca i32
  %arg3 = alloca i32
  %loc0 = alloca i32
  store %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %param0, %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  store %"System.Byte[]" addrspace(1)* %param1, %"System.Byte[]" addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %1 = load %"System.Byte[]" addrspace(1)** %arg1
  %2 = load i32* %arg2
  %3 = load i32* %arg3
  %4 = bitcast %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %0 to %System.IO.ConsoleStream addrspace(1)*
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.IO.ConsoleStream addrspace(1)*, %"System.Byte[]" addrspace(1)*, i32, i32)*)(%System.IO.ConsoleStream addrspace(1)* %4, %"System.Byte[]" addrspace(1)* %1, i32 %2, i32 %3)
  %5 = load %"System.ConsolePal+WindowsConsoleStream" addrspace(1)** %this
  %6 = getelementptr inbounds %"System.ConsolePal+WindowsConsoleStream" addrspace(1)* %5, i32 0, i32 7
  %7 = load i64 addrspace(1)* %6, align 8
  %8 = load %"System.Byte[]" addrspace(1)** %arg1
  %9 = load i32* %arg2
  %10 = load i32* %arg3
  %11 = call i32 inttoptr (i64 NORMALIZED_ADDRESS to i32 (i64, %"System.Byte[]" addrspace(1)*, i32, i32)*)(i64 %7, %"System.Byte[]" addrspace(1)* %8, i32 %9, i32 %10)
  store i32 %11, i32* %loc0
  %12 = load i32* %loc0
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %entry
  %15 = load i32* %loc0
  %16 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* (i32)*)(i32 %15)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %16) #0
  unreachable

; <label>:17                                      ; preds = %entry
  ret void
}

INFO:  jitting method ConsoleStream::ValidateWrite using MSILCJit
Successfully read ConsoleStream.ValidateWrite

define void @ConsoleStream.ValidateWrite(%System.IO.ConsoleStream addrspace(1)* %param0, %"System.Byte[]" addrspace(1)* %param1, i32 %param2, i32 %param3) {
entry:
  %this = alloca %System.IO.ConsoleStream addrspace(1)*
  %arg1 = alloca %"System.Byte[]" addrspace(1)*
  %arg2 = alloca i32
  %arg3 = alloca i32
  store %System.IO.ConsoleStream addrspace(1)* %param0, %System.IO.ConsoleStream addrspace(1)** %this
  store %"System.Byte[]" addrspace(1)* %param1, %"System.Byte[]" addrspace(1)** %arg1
  store i32 %param2, i32* %arg2
  store i32 %param3, i32* %arg3
  %0 = load %"System.Byte[]" addrspace(1)** %arg1
  %1 = icmp ne %"System.Byte[]" addrspace(1)* %0, null
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %entry
  %3 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  %4 = call %System.ArgumentNullException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentNullException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4, %System.String addrspace(1)* %3)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentNullException addrspace(1)*)*)(%System.ArgumentNullException addrspace(1)* %4) #0
  unreachable

; <label>:5                                       ; preds = %entry
  %6 = load i32* %arg2
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %5
  %9 = load i32* %arg3
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %22, label %11

; <label>:11                                      ; preds = %5, %8
  %12 = load i32* %arg2
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %11
  %15 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %18

; <label>:16                                      ; preds = %11
  %17 = load %System.String addrspace(1)** inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)**), align 8
  br label %18

; <label>:18                                      ; preds = %14, %16
  %19 = phi %System.String addrspace(1)* [ %15, %14 ], [ %17, %16 ]
  %20 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  %21 = call %System.ArgumentOutOfRangeException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentOutOfRangeException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*, %System.String addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %21, %System.String addrspace(1)* %19, %System.String addrspace(1)* %20)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentOutOfRangeException addrspace(1)*)*)(%System.ArgumentOutOfRangeException addrspace(1)* %21) #0
  unreachable

; <label>:22                                      ; preds = %8
  %23 = load %"System.Byte[]" addrspace(1)** %arg1
  %24 = getelementptr inbounds %"System.Byte[]" addrspace(1)* %23, i32 0, i32 1
  %25 = load i32 addrspace(1)* %24
  %26 = zext i32 %25 to i64
  %27 = trunc i64 %26 to i32
  %28 = load i32* %arg2
  %29 = sub i32 %27, %28
  %30 = load i32* %arg3
  %31 = icmp sge i32 %29, %30
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %22
  %33 = call %System.String addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.String addrspace(1)* ()*)()
  %34 = call %System.ArgumentException addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.ArgumentException addrspace(1)* (i64)*)(i64 NORMALIZED_ADDRESS)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*, %System.String addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34, %System.String addrspace(1)* %33)
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.ArgumentException addrspace(1)*)*)(%System.ArgumentException addrspace(1)* %34) #0
  unreachable

; <label>:35                                      ; preds = %22
  %36 = load %System.IO.ConsoleStream addrspace(1)** %this
  %37 = getelementptr inbounds %System.IO.ConsoleStream addrspace(1)* %36, i32 0, i32 4
  %38 = load i8 addrspace(1)* %37, align 8
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %43, label %41

; <label>:41                                      ; preds = %35
  %42 = call %System.Exception addrspace(1)* inttoptr (i64 NORMALIZED_ADDRESS to %System.Exception addrspace(1)* ()*)()
  call void inttoptr (i64 NORMALIZED_ADDRESS to void (%System.Exception addrspace(1)*)*)(%System.Exception addrspace(1)* %42) #0
  unreachable

; <label>:43                                      ; preds = %35
  ret void
}

INFO:  jitting method WindowsConsoleStream::WriteFileNative using MSILCJit
Failed to read WindowsConsoleStream.WriteFileNative[loadElemA]
INFO:  jitting method TextWriter::WriteLine using MSILCJit
Failed to read TextWriter.WriteLine[derefAddress]
INFO:  jitting method StreamWriter::Write using MSILCJit
Failed to read StreamWriter.Write[Tail call]

